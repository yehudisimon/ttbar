      ! one has to multply alpha_s**3*pi in order to get the hard function
      ! it would be 4*eq.(60) in arXiv:1003.5827
      subroutine gg2ttx_sHFmatrix(ci,cj,s,t,mt2,mu2,IR2,IR1r,IR1i,Fr,Fi)
      !subroutine gg2ttx_sHFmatrix(ci,cj,s,t,mt2,mu2,res)
      implicit none
      integer ci,cj
      double precision s,t,mt2,mu2
      double precision IR2, IR1r, IR1i, Fr, Fi
      double complex res(0:2)
      integer i
      if(ci.eq.1.and.cj.eq.1)then
         call gg2ttx_sHFmatrix_11(s,t,mt2,mu2,res)
      elseif(ci.eq.2.and.cj.eq.2)then
         call gg2ttx_sHFmatrix_22(s,t,mt2,mu2,res)
      elseif(ci.eq.3.and.cj.eq.3)then
         call gg2ttx_sHFmatrix_33(s,t,mt2,mu2,res)
      elseif(ci.eq.1.and.cj.eq.2)then
         call gg2ttx_sHFmatrix_12(s,t,mt2,mu2,res)
      elseif(ci.eq.2.and.cj.eq.1)then
         call gg2ttx_sHFmatrix_12(s,t,mt2,mu2,res)
         do i=0,2
            res(i)=dconjg(res(i))
         enddo
      elseif(ci.eq.1.and.cj.eq.3)then
         call gg2ttx_sHFmatrix_13(s,t,mt2,mu2,res)
      elseif(ci.eq.3.and.cj.eq.1)then
         call gg2ttx_sHFmatrix_13(s,t,mt2,mu2,res)
         do i=0,2
            res(i)=dconjg(res(i))
         enddo
      elseif(ci.eq.2.and.cj.eq.3)then
         call gg2ttx_sHFmatrix_23(s,t,mt2,mu2,res)
      elseif(ci.eq.3.and.cj.eq.2)then
         call gg2ttx_sHFmatrix_23(s,t,mt2,mu2,res)
         do i=0,2
            res(i)=dconjg(res(i))
         enddo
      else
         write(*,*)"Error: do not understand the matrix element =",ci,cj
         stop
      endif
      IR2=DREAL(res(2))
      IR1r=DREAL(res(1))
      IR1i=DIMAG(res(1))
      Fr=DREAL(res(0))
      Fi=DIMAG(res(0))
      return
      end

      subroutine gg2ttx_sHFmatrix_11(s,t,mt2,mu2,res)
      use Func_PSI
      implicit none
      double complex res(0:2)
      double precision doublepole,rsinglepole,isinglepole
      double precision rfinite,ifinite
      double precision s,t,mt2,mu2
      double precision x,y,xs
      double precision logtwo,log4pi,zero,one,two,four,Pi
      parameter (zero=0d0)
      parameter (one=1d0)
      parameter (two=2d0)
      parameter (four=4d0)
      parameter (logtwo=0.6931471805599453094172d0)
      parameter (log4pi=2.53102424696929079298d0)
      parameter (Pi=3.141592653589793238462643d0)
      double precision logx,log1mx,log1px,logy,log1py
      double precision log1pxpx2mxy,log1px2mxy,logMT2mu2
      double precision Li2x2,Li2mx,Li2my,Li2m1oxmxpy
      integer i
      xs=s/mt2
      x=-one+xs/two-dsqrt(-xs+xs**2/four)
      IF(x.GT.1d0.OR.x.LT.0d0)THEN
         WRITE(*,*)"Error: x>1 or x<0 !"
         STOP
      ENDIF
      y=-t/mt2
      IF(y.GT.one/x+x)THEN
         WRITE(*,*)"Error: y>1/x+x !"
         STOP
      ENDIF
      ! logs and Li2
      logx=DLOG(x)
      log1mx=DLOG(one-x)
      log1px=DLOG(one+x)
      logy=DLOG(y)
      log1py=DLOG(one+y)
      log1pxpx2mxy=DLOG(one+x+x**2-x*y)
      log1px2mxy=DLOG(one+x**2-x*y)
      logMT2mu2=DLOG(mt2/mu2)
      Li2x2=li2(x**2)
      Li2mx=li2(-x)
      Li2my=li2(-y)
      Li2m1oxmxpy=li2(-one/x-x+y)
      ! double pole
      doublepole=        (-32*(1 + y + x**6*(1 + y) + 
     -      x*(3 + 4*y - 3*y**2) + 
     -      x**5*(3 + 4*y - 3*y**2) - 
     -      2*x**3*y*(-4 + 7*y + y**3) + 
     -      x**2*(3 + 11*y - 4*y**2 + 4*y**3) + 
     -      x**4*(3 + 11*y - 4*y**2 + 4*y**3)))/
     -  (3d0*x*(1 + y)**2*(1 + x + x**2 - x*y)**2)
      rsinglepole=        (16*(5*(1 + y) + 5*x**6*(1 + y) + 
     -      x*(51 - 52*y + 21*y**2) + 
     -      x**5*(51 - 52*y + 21*y**2) + 
     -      x**2*(231 - 161*y + 52*y**2 - 
     -         52*y**3) + 
     -      x**4*(231 - 161*y + 52*y**2 - 
     -         52*y**3) + 
     -      2*x**3*(198 - 52*y + 109*y**2 + 
     -         13*y**4) + 
     -      36*log1px*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       + 18*logMT2mu2*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - (18*log1pxpx2mxy*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 + 
     -      (18*log1py*(1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 + 
     -      (4*logx*(2 + 2*x**3 - 
     -           x**2*(7 + 9*y) + x*(11 + 9*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*(1 + x)**2)))/
     -  (27d0*x*(1 + y)**2*(1 + x + x**2 - x*y)**2)
      isinglepole=zero
      rfinite=        (16*((-216*log1px*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + x + x**6 + x**5*(1 - 2*y) - 
     -           2*x*y - 2*x**3*(1 + 2*y) + 
     -           x**2*(1 + 2*y**2) + 
     -           x**4*(1 + 2*y**2)))/(-1 + x)**2 
     -       - 27*log1py**2*(1 + y)**2*
     -       (1 + x + x**2 - x*y)**2*
     -       (1 + x**4 - 4*x*(-1 + y) - 
     -         4*x**3*(-1 + y) + 
     -         2*x**2*(6 - 2*y + 3*y**2)) - 
     -      27*log1pxpx2mxy**2*(1 + y)**2*
     -       (1 + x + x**2 - x*y)**2*
     -       (3 + 3*x**4 - 8*x*y - 8*x**3*y + 
     -         2*x**2*(8 + 2*y + 3*y**2)) - 
     -      54*log1px**2*(1 + y)**2*
     -       (1 + x + x**2 - x*y)**2*
     -       (3 + 3*x**4 - 8*x*(-1 + y) - 
     -         8*x**3*(-1 + y) + 
     -         2*x**2*(9 + 4*y**2)) - 
     -      108*log1px*logMT2mu2*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - 27*logMT2mu2**2*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - (24*Li2x2*(1 + x**2)*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(-1 + x**2) - 
     -      (48*log1mx*logx*(1 + x**2)*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(-1 + x**2) + 
     -      (54*log1pxpx2mxy*logMT2mu2*(1 + y)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 - 
     -      (54*log1py*logMT2mu2*(1 + y)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 - 
     -      (12*logMT2mu2*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (2 + 2*x**3 - x**2*(7 + 9*y) + 
     -           x*(11 + 9*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*(1 + x)**2) - 
     -      12*logMT2mu2*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (7*(1 + y) + 7*x**6*(1 + y) + 
     -         x*(30 + 10*y - 12*y**2) + 
     -         x**5*(30 + 10*y - 12*y**2) + 
     -         x**2*(75 + 23*y - 10*y**2 + 
     -            10*y**3) + 
     -         x**4*(75 + 23*y - 10*y**2 + 
     -            10*y**3) + 
     -         x**3*(99 + 20*y - 26*y**2 - 5*y**4)
     -         ) + 54*log1pxpx2mxy*log1py*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(-1 + 4*y - 3*y**2) + 
     -         x**5*(-1 + 4*y - 3*y**2) + 
     -         x**2*
     -          (-5 + 19*y - 4*y**2 + 4*y**3) + 
     -         x**4*
     -          (-5 + 19*y - 4*y**2 + 4*y**3) - 
     -         2*x**3*(8 - 4*y + 11*y**2 + y**4)) 
     -       - (108*log1px*log1py*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(-1 + 4*y - 3*y**2) + 
     -           x**5*(-1 + 4*y - 3*y**2) + 
     -           x**2*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            + x**4*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            - 2*x**3*
     -            (13 + 13*y**2 + 4*y**3 + 2*y**4)
     -           ))/(1 + x)**2 + 
     -      (108*log1px*log1pxpx2mxy*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (2 + 2*x**8 + x*(7 - 9*y) + 
     -           x**7*(7 - 9*y) + 
     -           x**2*(21 - 28*y + 15*y**2) + 
     -           x**6*(21 - 28*y + 15*y**2) + 
     -           x**3*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**5*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**4*
     -            (62 - 64*y + 50*y**2 - 8*y**3 + 
     -              4*y**4)))/(1 + x)**2 - 
     -      6*Li2my*(1 + x + x**2 - x*y)**2*
     -       (3 + 8*y + 4*y**2 + 
     -         x**4*(3 + 8*y + 4*y**2) + 
     -         x*(22 + 43*y + 8*y**2 - 9*y**3) + 
     -         x**3*
     -          (22 + 43*y + 8*y**2 - 9*y**3) + 
     -         2*x**2*
     -          (22 + 53*y + 42*y**2 + 25*y**3 + 
     -            11*y**4)) + 
     -      (6*log1pxpx2mxy*logx*
     -         (-1 - x**2 + x*(-1 + y))*
     -         (1 + y)**2*
     -         (17 - x**9 + x*(65 - 34*y) + 
     -           x**8*(47 + 2*y) + 
     -           x**2*(145 - 44*y + 3*y**2) + 
     -           x**7*(55 - 116*y + 21*y**2) + 
     -           x**6*
     -            (59 - 198*y + 13*y**2 - 58*y**3)
     -             + x**3*
     -            (149 - 18*y + 67*y**2 + 50*y**3)
     -             + 2*x**5*
     -            (68 + 4*y + 104*y**2 + 
     -              39*y**3 + 18*y**4) - 
     -           2*x**4*
     -            (-32 + 104*y + 76*y**2 + 
     -              51*y**3 + 18*y**4)))/
     -       ((-1 + x)*(1 + x)**2) - 
     -      6*Li2m1oxmxpy*(1 + y)**2*
     -       (17 + 17*x**8 + x*(66 - 69*y) + 
     -         x**7*(66 - 69*y) + 
     -         x**2*(190 - 174*y + 109*y**2) + 
     -         x**6*(190 - 174*y + 109*y**2) + 
     -         x**3*(310 - 402*y + 158*y**2 - 
     -            79*y**3) + 
     -         x**5*(310 - 402*y + 158*y**2 - 
     -            79*y**3) + 
     -         x**4*(384 - 438*y + 294*y**2 - 
     -            50*y**3 + 22*y**4)) + 
     -      (6*Li2mx*(1 + y)*(1 + x + x**2 - x*y)*
     -         (29*(1 + y) + 29*x**10*(1 + y) + 
     -           x*(9 - 16*y - 89*y**2) + 
     -           x**9*(9 - 16*y - 89*y**2) + 
     -           x**2*
     -            (-7 + 193*y + 192*y**2 + 
     -              120*y**3) + 
     -           x**8*
     -            (-7 + 193*y + 192*y**2 + 
     -              120*y**3) - 
     -           4*x**3*
     -            (32 + 16*y + 57*y**2 + 
     -              88*y**3 + 15*y**4) - 
     -           4*x**7*
     -            (32 + 16*y + 57*y**2 + 
     -              88*y**3 + 15*y**4) + 
     -           x**5*
     -            (-402 - 96*y - 326*y**2 - 
     -              704*y**3 + 56*y**4) + 
     -           2*x**4*
     -            (-67 + 241*y + 288*y**2 + 
     -              4*y**3 + 88*y**4) + 
     -           2*x**6*
     -            (-67 + 241*y + 288*y**2 + 
     -              4*y**3 + 88*y**4)))/
     -       ((-1 + x)**3*(1 + x)) + 
     -      (3*logx**2*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (17 + 20*x**11 + 
     -           x**10*(61 - 80*y) + 
     -           x*(57 - 33*y) + 
     -           x**2*(41 + 44*y - 12*y**2) + 
     -           x**9*(-23 - 101*y + 148*y**2) + 
     -           x**8*
     -            (5 + 140*y - 244*y**2 - 
     -              160*y**3) + 
     -           4*x**3*
     -            (-33 + 43*y + 22*y**2 + 25*y**3)
     -             + 4*x**7*
     -            (-20 + 219*y + 34*y**2 + 
     -              119*y**3 + 18*y**4) - 
     -           2*x**4*
     -            (99 + 58*y + 370*y**2 + 
     -              180*y**3 + 36*y**4) - 
     -           2*x**6*
     -            (323 + 66*y + 726*y**2 + 
     -              244*y**3 + 108*y**4) + 
     -           2*x**5*
     -            (7 + 623*y + 318*y**2 + 
     -              360*y**3 + 108*y**4)))/
     -       ((-1 + x)**3*(1 + x)**2) - 
     -      (6*log1py*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (4*(1 + y) + 4*x**9*(1 + y) + 
     -           x*(-1 + 18*y - 13*y**2) + 
     -           x**8*(17 + 54*y + 5*y**2) + 
     -           x**7*
     -            (54 + 205*y - 32*y**2 - 23*y**3)
     -             + x**2*
     -            (-54 + 43*y - 32*y**2 + 31*y**3)
     -             + x**6*
     -            (2 + 279*y - 14*y**2 + 
     -              111*y**3 + 50*y**4) - 
     -           x**3*
     -            (106 - 81*y + 194*y**2 + 
     -              87*y**3 + 58*y**4) + 
     -           x**4*
     -            (-77 + 376*y + 177*y**2 + 
     -              282*y**3 + 114*y**4 + 36*y**5)
     -             - x**5*
     -            (131 - 88*y + 345*y**2 + 
     -              186*y**3 + 138*y**4 + 36*y**5)
     -           ))/((-1 + x)*(1 + x)**2) + 
     -      (6*log1px*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (21*(1 + y) + 3*x**9*(1 + y) + 
     -           x*(28 - 23*y - 83*y**2) + 
     -           x**8*(100 + 175*y + 43*y**2) + 
     -           x**7*
     -            (181 + 324*y - 127*y**2 - 
     -              110*y**3) + 
     -           x**2*
     -            (19 - 36*y - 73*y**2 + 142*y**3)
     -             + x**6*
     -            (61 + 392*y + 17*y**2 + 
     -              174*y**3 + 136*y**4) - 
     -           x**3*
     -            (-43 + 40*y + 361*y**2 + 
     -              78*y**3 + 152*y**4) + 
     -           x**4*
     -            (95 + 448*y + 285*y**2 + 
     -              532*y**3 + 192*y**4 + 72*y**5)
     -             - x**5*
     -            (103 - 16*y + 597*y**2 + 
     -              404*y**3 + 240*y**4 + 72*y**5)
     -           ))/((-1 + x)*(1 + x)**2) + 
     -      (6*log1pxpx2mxy*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (18 + 18*x**12 + x*(84 - 113*y) + 
     -           x**11*(84 - 113*y) + 
     -           x**2*(273 - 395*y + 296*y**2) + 
     -           x**10*(273 - 395*y + 296*y**2) + 
     -           x**3*
     -            (541 - 1205*y + 724*y**2 - 
     -              426*y**3) + 
     -           x**9*
     -            (541 - 1205*y + 724*y**2 - 
     -              426*y**3) + 
     -           x**4*
     -            (939 - 2007*y + 2059*y**2 - 
     -              657*y**3 + 362*y**4) + 
     -           x**8*
     -            (939 - 2007*y + 2059*y**2 - 
     -              657*y**3 + 362*y**4) + 
     -           x**5*
     -            (1211 - 3065*y + 2658*y**2 - 
     -              1770*y**3 + 302*y**4 - 
     -              173*y**5) + 
     -           x**7*
     -            (1211 - 3065*y + 2658*y**2 - 
     -              1770*y**3 + 302*y**4 - 
     -              173*y**5) + 
     -           2*x**6*
     -            (678 - 1621*y + 1765*y**2 - 
     -              747*y**3 + 408*y**4 - 
     -              29*y**5 + 18*y**6)))/
     -       ((1 + x)**2*(1 + x**2 - x*y)**2) - 
     -      (6*log1py*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (y*(2 + 15*y + 12*y**2) + 
     -           x**6*y*(2 + 15*y + 12*y**2) + 
     -           x*(2 + 5*y + 49*y**2 - 29*y**3 - 
     -              37*y**4) + 
     -           x**5*
     -            (2 + 5*y + 49*y**2 - 29*y**3 - 
     -              37*y**4) + 
     -           x**2*
     -            (10 - y + 99*y**2 - 88*y**3 - 
     -              12*y**4 + 43*y**5) + 
     -           x**4*
     -            (10 - y + 99*y**2 - 88*y**3 - 
     -              12*y**4 + 43*y**5) - 
     -           2*x**3*
     -            (-8 + 4*y - 47*y**2 + 
     -              119*y**3 + 83*y**4 + 
     -              29*y**5 + 18*y**6)))/
     -       ((1 + x)**2*y**2) - 
     -      (6*logx*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (-8 + 8*x**14 + x**13*(8 - 47*y) + 
     -           x*(-56 + y) + 
     -           x**2*(-137 + 209*y + 74*y**2) + 
     -           x**12*(23 + 65*y + 122*y**2) - 
     -           x**3*
     -            (337 - 368*y + 460*y**2 + 
     -              184*y**3) - 
     -           x**11*
     -            (81 - 16*y + 428*y**2 + 
     -              200*y**3) + 
     -           x**4*
     -            (-406 + 1306*y - 449*y**2 + 
     -              717*y**3 + 218*y**4) + 
     -           x**10*
     -            (-54 + 906*y - 257*y**2 + 
     -              861*y**3 + 218*y**4) - 
     -           x**5*
     -            (646 - 1342*y + 2608*y**2 - 
     -              254*y**3 + 682*y**4 + 137*y**5
     -              ) - 
     -           x**9*
     -            (326 - 846*y + 2608*y**2 - 
     -              286*y**3 + 810*y**4 + 137*y**5
     -              ) - 
     -           2*x**7*
     -            (289 - 897*y + 2096*y**2 - 
     -              570*y**3 + 838*y**4 + 
     -              79*y**5 + 36*y**6) + 
     -           x**6*
     -            (-537 + 2485*y - 1997*y**2 + 
     -              2939*y**3 + 86*y**4 + 
     -              344*y**5 + 36*y**6) + 
     -           x**8*
     -            (-329 + 2229*y - 1885*y**2 + 
     -              3115*y**3 + 54*y**4 + 
     -              376*y**5 + 36*y**6)))/
     -       (-1 + x**4 + x*y - x**3*y)**2 + 
     -      (-(x*(12 + (300 + 69*Pi**2)*y + 
     -              8*(-9 + 28*Pi**2)*y**2 + 
     -              (-762 + 175*Pi**2)*y**3 + 
     -              3*(-134 + 9*Pi**2)*y**4)) + 
     -         x**13*
     -          (12 + 3*(100 + 9*Pi**2)*y + 
     -            (-72 + 97*Pi**2)*y**2 + 
     -            (-762 + 143*Pi**2)*y**3 + 
     -            (-402 + 80*Pi**2)*y**4) + 
     -         x**12*
     -          (36 + (732 - 74*Pi**2)*y + 
     -            (318 - 319*Pi**2)*y**2 + 
     -            (402 - 393*Pi**2)*y**3 + 
     -            (1524 - 305*Pi**2)*y**4 - 
     -            8*(-93 + 22*Pi**2)*y**5) + 
     -         x**2*(-36 + 6*(-122 + 9*Pi**2)*y + 
     -            (-318 + 247*Pi**2)*y**2 + 
     -            (-402 + 676*Pi**2)*y**3 + 
     -            (-1524 + 527*Pi**2)*y**4 + 
     -            (-744 + 63*Pi**2)*y**5) + 
     -         x**11*
     -          (12 + (246 + 25*Pi**2)*y + 
     -            3*(-348 + 137*Pi**2)*y**2 + 
     -            4*(-393 + 290*Pi**2)*y**3 + 
     -            (-1524 + 967*Pi**2)*y**4 + 
     -            3*(-670 + 127*Pi**2)*y**5 + 
     -            52*(-15 + 4*Pi**2)*y**6) - 
     -         x**3*(12 + (246 + 113*Pi**2)*y + 
     -            2*(-522 + 233*Pi**2)*y**2 + 
     -            12*(-131 + 50*Pi**2)*y**3 + 
     -            (-1524 + 863*Pi**2)*y**4 + 
     -            (-2010 + 673*Pi**2)*y**5 + 
     -            (-780 + 77*Pi**2)*y**6) + 
     -         Pi**2*x**7*y*
     -          (-504 + 1207*y + 1456*y**2 - 
     -            60*y**3 + 1620*y**4 + 
     -            1253*y**5 - 64*y**6 + 108*y**7) 
     -          + x**4*
     -          (24 + (750 - 64*Pi**2)*y + 
     -            132*(1 + 4*Pi**2)*y**2 + 
     -            (-1698 + 1253*Pi**2)*y**3 + 
     -            3*(-668 + 219*Pi**2)*y**4 + 
     -            6*(-363 + 67*Pi**2)*y**5 + 
     -            (-1734 + 467*Pi**2)*y**6 + 
     -            24*(-19 + 2*Pi**2)*y**7) - 
     -         x**10*
     -          (24 + (750 + 254*Pi**2)*y + 
     -            12*(11 + 42*Pi**2)*y**2 + 
     -            2*(-849 + 494*Pi**2)*y**3 + 
     -            (-2004 + 2003*Pi**2)*y**4 + 
     -            33*(-66 + 43*Pi**2)*y**5 + 
     -            (-1734 + 295*Pi**2)*y**6 + 
     -            8*(-57 + 16*Pi**2)*y**7) + 
     -         x**5*(84 - 21*(-84 + 17*Pi**2)*y + 
     -            6*(-77 + 40*Pi**2)*y**2 - 
     -            (846 + 91*Pi**2)*y**3 - 
     -            4*(-594 + 361*Pi**2)*y**4 - 
     -            114*(-16 + 3*Pi**2)*y**5 + 
     -            3*(514 + 93*Pi**2)*y**6 + 
     -            (912 - 208*Pi**2)*y**7 - 
     -            6*(-19 + 2*Pi**2)*y**8) - 
     -         x**8*(60 + 4*(345 + 143*Pi**2)*y - 
     -            (1104 + 85*Pi**2)*y**2 + 
     -            (-1392 + 865*Pi**2)*y**3 + 
     -            4*(93 + 821*Pi**2)*y**4 + 
     -            6*(-239 + 283*Pi**2)*y**5 + 
     -            (-1002 + 523*Pi**2)*y**6 + 
     -            8*(-57 + 70*Pi**2)*y**7 + 
     -            12*(-19 + 3*Pi**2)*y**8) + 
     -         x**6*(60 + (1380 - 487*Pi**2)*y + 
     -            (-1104 + 769*Pi**2)*y**2 + 
     -            8*(-174 + 41*Pi**2)*y**3 - 
     -            4*(-93 + 406*Pi**2)*y**4 - 
     -            2*(717 + 58*Pi**2)*y**5 + 
     -            3*(-334 + 69*Pi**2)*y**6 - 
     -            24*(19 + 16*Pi**2)*y**7 + 
     -            4*(-57 + 13*Pi**2)*y**8) + 
     -         x**9*(-84 - (1764 + 193*Pi**2)*y + 
     -            (462 + 975*Pi**2)*y**2 + 
     -            3*(282 + 713*Pi**2)*y**3 + 
     -            (-2376 + 1475*Pi**2)*y**4 + 
     -            2*(-912 + 835*Pi**2)*y**5 + 
     -            (-1542 + 1217*Pi**2)*y**6 + 
     -            48*(-19 + 3*Pi**2)*y**7 + 
     -            2*(-57 + 16*Pi**2)*y**8) + 
     -         y*(Pi**2*(6 + 10*y + 5*y**2) - 
     -            6*(17 + 33*y + 16*y**2)) + 
     -         x**14*y*
     -          (-(Pi**2*(17 + 32*y + 16*y**2)) + 
     -            6*(17 + 33*y + 16*y**2)))/
     -       ((-1 + x)**3*(1 + x)*y*
     -         (1 + x**2 - x*y))))/
     -  (81d0*x*(1 + y)**3*(1 + x + x**2 - x*y)**3)
      ifinite=zero
      res(2)=dcmplx(doublepole,zero)
      res(1)=dcmplx(rsinglepole,isinglepole)
      res(0)=dcmplx(rfinite,ifinite)
      return
      end


      subroutine gg2ttx_sHFmatrix_12(s,t,mt2,mu2,res)
      use Func_PSI
      implicit none
      double complex res(0:2)
      double precision doublepole,rsinglepole,isinglepole
      double precision rfinite,ifinite
      double precision s,t,mt2,mu2
      double precision x,y,xs
      double precision logtwo,log4pi,zero,one,two,four,Pi
      parameter (zero=0d0)
      parameter (one=1d0)
      parameter (two=2d0)
      parameter (four=4d0)
      parameter (logtwo=0.6931471805599453094172d0)
      parameter (log4pi=2.53102424696929079298d0)
      parameter (Pi=3.141592653589793238462643d0)
      double precision logx,log1mx,log1px,logy,log1py
      double precision log1pxpx2mxy,log1px2mxy,logMT2mu2
      double precision Li2x2,Li2mx,Li2my,Li2m1oxmxpy
      integer i
      xs=s/mt2
      x=-one+xs/two-dsqrt(-xs+xs**2/four)
      IF(x.GT.1d0.OR.x.LT.0d0)THEN
         WRITE(*,*)"Error: x>1 or x<0 !"
         STOP
      ENDIF
      y=-t/mt2
      IF(y.GT.one/x+x)THEN
         WRITE(*,*)"Error: y>1/x+x !"
         STOP
      ENDIF
      ! logs and Li2
      logx=DLOG(x)
      log1mx=DLOG(one-x)
      log1px=DLOG(one+x)
      logy=DLOG(y)
      log1py=DLOG(one+y)
      log1pxpx2mxy=DLOG(one+x+x**2-x*y)
      log1px2mxy=DLOG(one+x**2-x*y)
      logMT2mu2=DLOG(mt2/mu2)
      Li2x2=li2(x**2)
      Li2mx=li2(-x)
      Li2my=li2(-y)
      Li2m1oxmxpy=li2(-one/x-x+y)
      ! double pole
      doublepole=        (-32*(1 + x**2 - 2*x*y)*
     -    (1 + y + x**6*(1 + y) + 
     -      x*(3 + 4*y - 3*y**2) + 
     -      x**5*(3 + 4*y - 3*y**2) - 
     -      2*x**3*y*(-4 + 7*y + y**3) + 
     -      x**2*(3 + 11*y - 4*y**2 + 4*y**3) + 
     -      x**4*(3 + 11*y - 4*y**2 + 4*y**3)))/
     -  (x*(1 + x)**2*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      rsinglepole=        (16*(27*log1px*(1 + x)**2*
     -       (1 + x**2 - 2*x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       + 18*logMT2mu2*(1 + x)**2*
     -       (1 + x**2 - 2*x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - 9*log1pxpx2mxy*
     -       (1 + x + x**4 + x**3*(1 - 3*y) - 
     -         3*x*y + 2*x**2*(2 + y + 2*y**2))*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       + 9*log1py*
     -       (2 + 2*x**4 + x*(3 - 5*y) + 
     -         x**3*(3 - 5*y) + 
     -         x**2*(6 - 2*y + 4*y**2))*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - (logx*
     -         (-8 + x**5 + x*(-17 + 7*y) + 
     -           x**4*(10 + 7*y) - 
     -           x**3*(34 + 65*y + 36*y**2) + 
     -           x**2*(20 + 79*y + 36*y**2))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(-1 + x) + 
     -      (1 + x)**2*(1 + x**2 - 2*x*y)*
     -       (5*(1 + y) + 5*x**6*(1 + y) + 
     -         x*(51 - 52*y + 21*y**2) + 
     -         x**5*(51 - 52*y + 21*y**2) + 
     -         x**2*(231 - 161*y + 52*y**2 - 
     -            52*y**3) + 
     -         x**4*(231 - 161*y + 52*y**2 - 
     -            52*y**3) + 
     -         2*x**3*
     -          (198 - 52*y + 109*y**2 + 13*y**4))
     -      ))/
     -  (9d0*x*(1 + x)**4*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      isinglepole=        (16*Pi*(1 + x**2 - 2*x*y)*
     -    (1 + y + x**6*(1 + y) + 
     -      x*(3 + 4*y - 3*y**2) + 
     -      x**5*(3 + 4*y - 3*y**2) - 
     -      2*x**3*y*(-4 + 7*y + y**3) + 
     -      x**2*(3 + 11*y - 4*y**2 + 4*y**3) + 
     -      x**4*(3 + 11*y - 4*y**2 + 4*y**3)))/
     -  ((-1 + x)*x*(1 + x)**3*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      rfinite=        (4*(-54*log1px**2*(1 + x)**2*(1 + y)**2*
     -       (1 + x**2 - 2*x*y)*
     -       (1 + x + x**2 - x*y)**2*
     -       (5 + 5*x**4 - 16*x*(-1 + y) - 
     -         16*x**3*(-1 + y) + 
     -         2*x**2*(19 + 8*y**2)) - 
     -      (108*log1px*(1 + x)**2*(1 + y)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (6 + 6*x**8 - x*(6 + 7*y) - 
     -           x**7*(6 + 7*y) + 
     -           x**3*(2 - 49*y - 4*y**2) + 
     -           x**5*(2 - 49*y - 4*y**2) + 
     -           x**2*(-5 + 4*y + 7*y**2) + 
     -           x**6*(-5 + 4*y + 7*y**2) + 
     -           x**4*(54 + 8*y + 42*y**2)))/
     -       (-1 + x)**4 - 
     -      324*log1px*logMT2mu2*(1 + x)**2*
     -       (1 + y)*(1 + x**2 - 2*x*y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - 108*logMT2mu2**2*(1 + x)**2*
     -       (1 + y)*(1 + x**2 - 2*x*y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - (42*Li2x2*(1 + x)*(1 + x**2)*
     -         (1 + y)*(1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(-1 + x) - 
     -      (84*log1mx*logx*(1 + x)*(1 + x**2)*
     -         (1 + y)*(1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(-1 + x) + 
     -      108*log1pxpx2mxy*logMT2mu2*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + x + x**4 + x**3*(1 - 3*y) - 
     -         3*x*y + 2*x**2*(2 + y + 2*y**2))*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - 108*log1py*logMT2mu2*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (2 + 2*x**4 + x*(3 - 5*y) + 
     -         x**3*(3 - 5*y) + 
     -         x**2*(6 - 2*y + 4*y**2))*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       + (12*logMT2mu2*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-8 + x**5 + x*(-17 + 7*y) + 
     -           x**4*(10 + 7*y) - 
     -           x**3*(34 + 65*y + 36*y**2) + 
     -           x**2*(20 + 79*y + 36*y**2))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(-1 + x) - 
     -      54*log1py**2*(1 + x)**2*(1 + y)**2*
     -       (1 + x + x**2 - x*y)**2*
     -       (2 + 2*x**6 + x*(11 - 9*y) + 
     -         x**5*(11 - 9*y) + 
     -         2*x**2*(16 - 10*y + 9*y**2) + 
     -         2*x**4*(16 - 10*y + 9*y**2) - 
     -         2*x**3*
     -          (-17 + 21*y - 8*y**2 + 6*y**3)) - 
     -      54*log1pxpx2mxy**2*(1 + x)**2*
     -       (1 + y)**2*(1 + x + x**2 - x*y)**2*
     -       (1 + x**6 - x*(7 + 9*y) - 
     -         x**5*(7 + 9*y) + 
     -         x**2*(1 + 12*y + 18*y**2) + 
     -         x**4*(1 + 12*y + 18*y**2) - 
     -         2*x**3*
     -          (13 + 21*y + 8*y**2 + 6*y**3)) - 
     -      48*logMT2mu2*(1 + x)**2*(1 + y)*
     -       (1 + x**2 - 2*x*y)*
     -       (1 + x + x**2 - x*y)*
     -       (7*(1 + y) + 7*x**6*(1 + y) + 
     -         x*(30 + 10*y - 12*y**2) + 
     -         x**5*(30 + 10*y - 12*y**2) + 
     -         x**2*(75 + 23*y - 10*y**2 + 
     -            10*y**3) + 
     -         x**4*(75 + 23*y - 10*y**2 + 
     -            10*y**3) + 
     -         x**3*(99 + 20*y - 26*y**2 - 5*y**4)
     -         ) + 108*log1pxpx2mxy*log1py*
     -       (1 + x)**2*(1 + y)*
     -       (1 + x**2 - 2*x*y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(-1 + 4*y - 3*y**2) + 
     -         x**5*(-1 + 4*y - 3*y**2) + 
     -         x**2*
     -          (-5 + 19*y - 4*y**2 + 4*y**3) + 
     -         x**4*
     -          (-5 + 19*y - 4*y**2 + 4*y**3) - 
     -         2*x**3*(8 - 4*y + 11*y**2 + y**4)) 
     -       - 108*log1px*log1py*
     -       (3 + 3*x**2 + x*(2 - 4*y))*(1 + y)*
     -       (1 + x + x**2 - x*y)**2*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(-1 + 4*y - 3*y**2) + 
     -         x**5*(-1 + 4*y - 3*y**2) + 
     -         x**2*
     -          (-13 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*
     -          (-13 + 11*y - 4*y**2 + 4*y**3) - 
     -         2*x**3*
     -          (13 + 13*y**2 + 4*y**3 + 2*y**4)) 
     -       + 108*log1px*log1pxpx2mxy*(1 + y)**2*
     -       (1 + x + x**2 - x*y)*
     -       (1 + x**2 - 2*x*(1 + 2*y))*
     -       (2 + 2*x**8 + x*(7 - 9*y) + 
     -         x**7*(7 - 9*y) + 
     -         x**2*(21 - 28*y + 15*y**2) + 
     -         x**6*(21 - 28*y + 15*y**2) + 
     -         x**3*(45 - 59*y + 28*y**2 - 
     -            12*y**3) + 
     -         x**5*(45 - 59*y + 28*y**2 - 
     -            12*y**3) + 
     -         x**4*(62 - 64*y + 50*y**2 - 
     -            8*y**3 + 4*y**4)) + 
     -      (12*Li2mx*(1 + x)*(1 + y)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (15*(1 + y) + 15*x**12*(1 + y) - 
     -           x*(66 + 65*y + 55*y**2) - 
     -           x**11*(66 + 65*y + 55*y**2) + 
     -           x**2*
     -            (1 + 256*y + 335*y**2 + 80*y**3)
     -             + x**10*
     -            (1 + 256*y + 335*y**2 + 80*y**3)
     -             - x**3*
     -            (48 + 181*y + 465*y**2 + 
     -              540*y**3 + 40*y**4) - 
     -           x**9*
     -            (48 + 181*y + 465*y**2 + 
     -              540*y**3 + 40*y**4) - 
     -           2*x**5*
     -            (467 + 245*y + 724*y**2 + 
     -              962*y**3 + 72*y**4) - 
     -           2*x**7*
     -            (467 + 245*y + 724*y**2 + 
     -              962*y**3 + 72*y**4) + 
     -           x**4*
     -            (-33 + 1217*y + 1348*y**2 + 
     -              368*y**3 + 270*y**4) + 
     -           x**8*
     -            (-33 + 1217*y + 1348*y**2 + 
     -              368*y**3 + 270*y**4) + 
     -           2*x**6*
     -            (-231 + 976*y + 1149*y**2 + 
     -              288*y**3 + 346*y**4)))/
     -       (-1 + x)**5 - 
     -      6*Li2m1oxmxpy*(1 + x)**2*(1 + y)**2*
     -       (18 + 18*x**10 + x*(49 - 131*y) + 
     -         x**9*(49 - 131*y) + 
     -         3*x**2*(41 - 110*y + 119*y**2) + 
     -         3*x**8*(41 - 110*y + 119*y**2) + 
     -         x**3*(77 - 991*y + 611*y**2 - 
     -            481*y**3) + 
     -         x**7*(77 - 991*y + 611*y**2 - 
     -            481*y**3) + 
     -         x**4*(56 - 1234*y + 1705*y**2 - 
     -            460*y**3 + 325*y**4) + 
     -         x**6*(56 - 1234*y + 1705*y**2 - 
     -            460*y**3 + 325*y**4) - 
     -         2*x**5*
     -          (21 + 846*y - 747*y**2 + 
     -            587*y**3 - 65*y**4 + 44*y**5)) 
     -       - 6*Li2my*(1 + x)**2*
     -       (1 + x + x**2 - x*y)**2*
     -       (4*(3 + 8*y + 4*y**2) + 
     -         4*x**6*(3 + 8*y + 4*y**2) + 
     -         x*(91 + 165*y - 11*y**2 - 
     -            61*y**3) + 
     -         x**5*(91 + 165*y - 11*y**2 - 
     -            61*y**3) + 
     -         x**2*(231 + 396*y + 50*y**2 + 
     -            60*y**3 + 115*y**4) + 
     -         x**4*(231 + 396*y + 50*y**2 + 
     -            60*y**3 + 115*y**4) - 
     -         2*x**3*
     -          (-140 - 179*y + 147*y**2 + 
     -            167*y**3 + 65*y**4 + 44*y**5)) 
     -       - (6*log1pxpx2mxy*logx*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (18 + 18*x**11 + x*(31 - 95*y) + 
     -           x**10*(229 - 41*y) + 
     -           x**9*(541 - 601*y + 64*y**2) + 
     -           x**2*(1 - 223*y + 118*y**2) + 
     -           x**8*
     -            (995 - 881*y + 641*y**2 - 
     -              165*y**3) + 
     -           x**3*
     -            (-175 - 557*y + 191*y**2 + 
     -              51*y**3) - 
     -           x**4*
     -            (155 + 929*y + 223*y**2 + 
     -              441*y**3 + 236*y**4) + 
     -           x**7*
     -            (1159 - 821*y + 1307*y**2 + 
     -              63*y**3 + 268*y**4) - 
     -           2*x**6*
     -            (-304 + 819*y + 180*y**2 + 
     -              617*y**3 + 210*y**4 + 72*y**5)
     -             + 2*x**5*
     -            (205 - 99*y + 747*y**2 + 
     -              463*y**3 + 258*y**4 + 72*y**5)
     -           ))/(-1 + x) + 
     -      (3*logx**2*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (18 + 34*x**15 + 
     -           x**14*(51 - 162*y) - 
     -           x*(5 + 98*y) + 
     -           x**2*(-124 + 167*y + 102*y**2) + 
     -           x**13*
     -            (-252 + 191*y + 414*y**2) + 
     -           x**12*
     -            (57 + 1167*y - 1238*y**2 - 
     -              670*y**3) + 
     -           x**3*
     -            (-95 + 567*y - 454*y**2 + 
     -              202*y**3) + 
     -           x**4*
     -            (35 + 1285*y - 2784*y**2 - 
     -              1128*y**3 - 512*y**4) + 
     -           x**11*
     -            (-613 + 813*y - 256*y**2 + 
     -              3328*y**3 + 672*y**4) + 
     -           x**5*
     -            (-1044 + 4749*y + 2544*y**2 + 
     -              7730*y**3 + 2756*y**4 + 
     -              288*y**5) - 
     -           x**10*
     -            (852 - 181*y + 9368*y**2 + 
     -              5294*y**3 + 3676*y**4 + 
     -              288*y**5) + 
     -           2*x**7*
     -            (585 + 10250*y + 7063*y**2 + 
     -              13711*y**3 + 5172*y**4 + 
     -              1440*y**5) - 
     -           2*x**8*
     -            (2975 + 3022*y + 15985*y**2 + 
     -              8745*y**3 + 6268*y**4 + 
     -              1440*y**5) + 
     -           x**9*
     -            (229 + 13598*y + 8970*y**2 + 
     -              17766*y**3 + 7540*y**4 + 
     -              1440*y**5) - 
     -           x**6*
     -            (3027 + 2354*y + 21558*y**2 + 
     -              11130*y**3 + 8044*y**4 + 
     -              1440*y**5)))/(-1 + x)**5 + 
     -      (6*log1py*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-16*(1 + y) + 2*x**11*(1 + y) - 
     -           x**10*(21 + 36*y + 31*y**2) + 
     -           x*(-3 - 54*y + 77*y**2) + 
     -           x**2*
     -            (231 - 228*y + 261*y**2 - 
     -              176*y**3) + 
     -           x**9*
     -            (-237 - 120*y + 135*y**2 + 
     -              130*y**3) + 
     -           x**8*
     -            (-535 + 26*y + 336*y**2 - 
     -              282*y**3 - 265*y**4) + 
     -           x**3*
     -            (689 - 658*y + 1002*y**2 - 
     -              12*y**3 + 311*y**4) + 
     -           x**7*
     -            (-609 + 96*y + 1222*y**2 + 
     -              552*y**3 + 679*y**4 + 308*y**5
     -              ) - 
     -           x**4*
     -            (-921 + 1578*y - 520*y**2 + 
     -              1554*y**3 + 545*y**4 + 
     -              340*y**5) + 
     -           2*x**5*
     -            (367 - 353*y + 1350*y**2 + 
     -              561*y**3 + 737*y**4 + 
     -              246*y**5 + 72*y**6) - 
     -           2*x**6*
     -            (146 + 668*y + 135*y**2 + 
     -              978*y**3 + 523*y**4 + 
     -              294*y**5 + 72*y**6)))/(-1 + x)
     -        + (12*log1px*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (8*(1 + y) + 17*x**11*(1 + y) + 
     -           x**10*(179 + 175*y - 32*y**2) - 
     -           x*(37 + 68*y + 59*y**2) + 
     -           x**9*
     -            (443 + 39*y - 669*y**2 - 
     -              69*y**3) + 
     -           x**2*
     -            (-169 - 6*y + 150*y**2 + 
     -              183*y**3) + 
     -           x**8*
     -            (738 - 37*y - 936*y**2 + 
     -              703*y**3 + 248*y**4) - 
     -           x**3*
     -            (405 - 44*y + 36*y**2 + 
     -              197*y**3 + 328*y**4) - 
     -           x**7*
     -            (-884 - 31*y + 1736*y**2 + 
     -              131*y**3 + 732*y**4 + 308*y**5
     -              ) + 
     -           x**4*
     -            (-538 + 337*y + 532*y**2 + 
     -              985*y**3 + 492*y**4 + 340*y**5
     -              ) - 
     -           x**5*
     -            (342 + 351*y + 1836*y**2 + 
     -              1331*y**3 + 1420*y**4 + 
     -              492*y**5 + 144*y**6) + 
     -           x**6*
     -            (630 + 963*y + 270*y**2 + 
     -              2161*y**3 + 1100*y**4 + 
     -              588*y**5 + 144*y**6)))/
     -       (-1 + x) + 
     -      (24*log1pxpx2mxy*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (9 + 9*x**14 - 9*x*(-5 + 7*y) - 
     -           9*x**13*(-5 + 7*y) + 
     -           x**2*(159 - 241*y + 212*y**2) + 
     -           x**12*(159 - 241*y + 212*y**2) + 
     -           x**3*
     -            (366 - 805*y + 585*y**2 - 
     -              422*y**3) + 
     -           x**11*
     -            (366 - 805*y + 585*y**2 - 
     -              422*y**3) + 
     -           x**4*
     -            (737 - 1496*y + 1912*y**2 - 
     -              784*y**3 + 525*y**4) + 
     -           x**10*
     -            (737 - 1496*y + 1912*y**2 - 
     -              784*y**3 + 525*y**4) + 
     -           x**5*
     -            (1104 - 2721*y + 2801*y**2 - 
     -              2563*y**3 + 592*y**4 - 
     -              407*y**5) + 
     -           x**9*
     -            (1104 - 2721*y + 2801*y**2 - 
     -              2563*y**3 + 592*y**4 - 
     -              407*y**5) + 
     -           x**6*
     -            (1471 - 3384*y + 4610*y**2 - 
     -              2778*y**3 + 1999*y**4 - 
     -              237*y**5 + 182*y**6) + 
     -           x**8*
     -            (1471 - 3384*y + 4610*y**2 - 
     -              2778*y**3 + 1999*y**4 - 
     -              237*y**5 + 182*y**6) - 
     -           2*x**7*
     -            (-789 + 1964*y - 2250*y**2 + 
     -              2107*y**3 - 672*y**4 + 
     -              442*y**5 - 20*y**6 + 18*y**7))
     -         )/(1 + x**2 - x*y)**2 - 
     -      (24*log1py*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (y*(2 + 15*y + 12*y**2) + 
     -           x**8*y*(2 + 15*y + 12*y**2) + 
     -           x*(2 + 7*y + 71*y**2 - 14*y**3 - 
     -              40*y**4) + 
     -           x**7*
     -            (2 + 7*y + 71*y**2 - 14*y**3 - 
     -              40*y**4) + 
     -           x**2*
     -            (12 + 4*y + 203*y**2 - 
     -              73*y**3 + 7*y**4 + 71*y**5) + 
     -           x**6*
     -            (12 + 4*y + 203*y**2 - 
     -              73*y**3 + 7*y**4 + 71*y**5) - 
     -           x**3*
     -            (-28 + 14*y - 351*y**2 + 
     -              256*y**3 + 46*y**4 + 3*y**5 + 
     -              70*y**6) - 
     -           x**5*
     -            (-28 + 14*y - 351*y**2 + 
     -              256*y**3 + 46*y**4 + 3*y**5 + 
     -              70*y**6) + 
     -           2*x**4*
     -            (18 - 13*y + 222*y**2 - 
     -              119*y**3 + 87*y**4 + 
     -              106*y**5 + 20*y**6 + 18*y**7))
     -         )/y**2 + 
     -      (12*logx*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (16 + 2*x**18 + x*(50 - 76*y) + 
     -           x**17*(22 - 5*y) - 
     -           x**16*(21 + 296*y + 58*y**2) + 
     -           x**2*(60 - 387*y + 74*y**2) + 
     -           x**3*
     -            (123 - 394*y + 1324*y**2 + 
     -              158*y**3) + 
     -           x**15*
     -            (174 - 35*y + 1339*y**2 + 
     -              270*y**3) + 
     -           x**14*
     -            (23 - 2316*y + 236*y**2 - 
     -              3149*y**3 - 514*y**4) + 
     -           x**4*
     -            (194 - 1775*y + 915*y**2 - 
     -              2780*y**3 - 470*y**4) + 
     -           x**5*
     -            (903 - 1828*y + 7920*y**2 - 
     -              733*y**3 + 3740*y**4 + 
     -              526*y**5) + 
     -           x**13*
     -            (1223 - 1034*y + 9487*y**2 + 
     -              154*y**3 + 4281*y**4 + 
     -              535*y**5) - 
     -           x**6*
     -            (-1139 + 8212*y - 5763*y**2 + 
     -              16534*y**3 + 933*y**4 + 
     -              3089*y**5 + 300*y**6) - 
     -           x**12*
     -            (-972 + 9725*y - 3982*y**2 + 
     -              18407*y**3 + 1839*y**4 + 
     -              3411*y**5 + 302*y**6) + 
     -           x**7*
     -            (2856 - 7899*y + 26110*y**2 - 
     -              6313*y**3 + 18207*y**4 + 
     -              2443*y**5 + 1430*y**6 + 
     -              72*y**7) + 
     -           x**11*
     -            (3231 - 7104*y + 28379*y**2 - 
     -              4103*y**3 + 19189*y**4 + 
     -              3001*y**5 + 1502*y**6 + 
     -              72*y**7) - 
     -           x**8*
     -            (-2871 + 17580*y - 16905*y**2 + 
     -              38881*y**3 + 407*y**4 + 
     -              10769*y**5 + 1790*y**6 + 
     -              288*y**7) - 
     -           x**10*
     -            (-2808 + 18461*y - 15671*y**2 + 
     -              40057*y**3 + 1597*y**4 + 
     -              10955*y**5 + 1928*y**6 + 
     -              288*y**7) + 
     -           x**9*
     -            (4090 - 12729*y + 39201*y**2 - 
     -              11321*y**3 + 29463*y**4 + 
     -              4439*y**5 + 3116*y**6 + 
     -              432*y**7)))/
     -       ((-1 + x)**4*(1 + x**2 - x*y)**2) - 
     -      ((1 + x)*(1 + x**2 - 2*x*y)*
     -         (-(x**15*
     -              (48 + (492 + 71*Pi**2)*y + 
     -                4*(-429 + 62*Pi**2)*y**2 + 
     -                3*(-1276 + 69*Pi**2)*y**3 + 
     -                2*(-834 + 25*Pi**2)*y**4)) 
     -            + x*
     -            (48 + (492 + 173*Pi**2)*y + 
     -              44*(-39 + 10*Pi**2)*y**2 + 
     -              3*(-1276 + 39*Pi**2)*y**3 - 
     -              2*(834 + 65*Pi**2)*y**4) + 
     -           x**14*
     -            (-96 + 36*(-37 + 13*Pi**2)*y + 
     -              (-2652 + 1115*Pi**2)*y**2 + 
     -              4*(-1839 + 263*Pi**2)*y**3 + 
     -              (-9156 + 491*Pi**2)*y**4 + 
     -              2*(-1608 + 55*Pi**2)*y**5) + 
     -           x**2*
     -            (96 - 36*(-37 + 13*Pi**2)*y + 
     -              (2652 - 1441*Pi**2)*y**2 + 
     -              (7356 - 1848*Pi**2)*y**3 + 
     -              (9156 - 601*Pi**2)*y**4 + 
     -              (3216 + 250*Pi**2)*y**5) + 
     -           x**13*
     -            (144 + (4056 - 454*Pi**2)*y + 
     -              (8724 - 2588*Pi**2)*y**2 + 
     -              (13188 - 4259*Pi**2)*y**3 - 
     -              4*(-4539 + 583*Pi**2)*y**4 + 
     -              (13260 - 381*Pi**2)*y**5 + 
     -              (3480 - 130*Pi**2)*y**6) - 
     -           x**3*
     -            (144 + (4056 - 642*Pi**2)*y + 
     -              (8724 - 2088*Pi**2)*y**2 + 
     -              (13188 - 3457*Pi**2)*y**3 + 
     -              (18156 - 2748*Pi**2)*y**4 + 
     -              (13260 - 511*Pi**2)*y**5 + 
     -              30*(116 + 9*Pi**2)*y**6) + 
     -           2*Pi**2*x**8*y*
     -            (1814 - 689*y + 76*y**2 + 
     -              7066*y**3 + 3090*y**4 + 
     -              53*y**5 + 1384*y**6 - 66*y**7)
     -             + x**12*
     -            (288 + 4*(609 + 158*Pi**2)*y + 
     -              (-10740 + 2509*Pi**2)*y**2 + 
     -              8*(-3087 + 677*Pi**2)*y**3 + 
     -              4*(-6702 + 1721*Pi**2)*y**4 + 
     -              4*(-6243 + 779*Pi**2)*y**5 - 
     -              (12036 + 13*Pi**2)*y**6 + 
     -              16*(-129 + 5*Pi**2)*y**7) + 
     -           x**4*
     -            (-288 - 4*(609 + 23*Pi**2)*y + 
     -              (10740 - 3879*Pi**2)*y**2 - 
     -              8*(-3087 + 737*Pi**2)*y**3 + 
     -              (26808 - 3012*Pi**2)*y**4 + 
     -              (24972 - 864*Pi**2)*y**5 + 
     -              3*(4012 + 21*Pi**2)*y**6 + 
     -              16*(129 + 10*Pi**2)*y**7) + 
     -           x**11*
     -            (192 + 6*(48 + 31*Pi**2)*y + 
     -              (1776 - 4700*Pi**2)*y**2 - 
     -              33*(-596 + 285*Pi**2)*y**3 + 
     -              (35496 - 6492*Pi**2)*y**4 - 
     -              9*(-3508 + 527*Pi**2)*y**5 + 
     -              (20076 - 2570*Pi**2)*y**6 + 
     -              24*(272 + 5*Pi**2)*y**7 + 
     -              (516 - 20*Pi**2)*y**8) - 
     -           x**7*
     -            (-576 - 
     -              3*(1420 + 937*Pi**2)*y + 
     -              12*(664 + 199*Pi**2)*y**2 + 
     -              (10308 + 5653*Pi**2)*y**3 + 
     -              (8592 - 3250*Pi**2)*y**4 + 
     -              24*(763 + 139*Pi**2)*y**5 + 
     -              4*(3297 + 1514*Pi**2)*y**6 - 
     -              8*(-816 + 41*Pi**2)*y**7 + 
     -              132*(13 + 3*Pi**2)*y**8) - 
     -           x**10*
     -            (480 + (5964 - 2768*Pi**2)*y - 
     -              5*(-372 + 239*Pi**2)*y**2 + 
     -              (8028 - 5976*Pi**2)*y**3 + 
     -              (27684 - 14911*Pi**2)*y**4 + 
     -              (30072 - 6810*Pi**2)*y**5 - 
     -              6*(-3556 + 93*Pi**2)*y**6 - 
     -              16*(-558 + 79*Pi**2)*y**7 + 
     -              6*(272 + 5*Pi**2)*y**8) + 
     -           x**6*
     -            (480 + 12*(497 + 120*Pi**2)*y + 
     -              (1860 - 3113*Pi**2)*y**2 + 
     -              (8028 - 5468*Pi**2)*y**3 + 
     -              (27684 + 2507*Pi**2)*y**4 + 
     -              2*(15036 + 631*Pi**2)*y**5 - 
     -              6*(-3556 + 47*Pi**2)*y**6 + 
     -              16*(558 + 109*Pi**2)*y**7 + 
     -              2*(816 + 25*Pi**2)*y**8) - 
     -           x**5*
     -            (192 + (288 - 1370*Pi**2)*y + 
     -              (1776 - 860*Pi**2)*y**2 + 
     -              (19668 - 3575*Pi**2)*y**3 - 
     -              72*(-493 + 92*Pi**2)*y**4 + 
     -              (31572 - 909*Pi**2)*y**5 + 
     -              2*(10038 + 925*Pi**2)*y**6 + 
     -              8*(816 + 25*Pi**2)*y**7 + 
     -              (516 + 40*Pi**2)*y**8) + 
     -           x**9*
     -            (-576 + 
     -              (-4260 + 2479*Pi**2)*y + 
     -              (7968 - 6696*Pi**2)*y**2 - 
     -              3*(-3436 + 3747*Pi**2)*y**3 + 
     -              (8592 - 3506*Pi**2)*y**4 + 
     -              (18312 - 8096*Pi**2)*y**5 + 
     -              (13188 - 5972*Pi**2)*y**6 + 
     -              24*(272 + 27*Pi**2)*y**7 - 
     -              4*(-429 + 74*Pi**2)*y**8) + 
     -           2*x**16*y*
     -            (Pi**2*(7 + 10*y + 5*y**2) - 
     -              12*(17 + 33*y + 16*y**2)) + 
     -           2*y*
     -            (Pi**2*(13 + 30*y + 15*y**2) + 
     -              12*(17 + 33*y + 16*y**2))))/
     -       ((-1 + x)**5*y*(1 + x**2 - x*y))))/
     -  (27d0*x*(1 + x)**4*(1 + y)**3*
     -    (1 + x + x**2 - x*y)**3)
      ifinite=        (4*Pi*(2*log1mx*(-1 + x)**3*(1 + x)*
     -       (1 + y)*(1 + x**2 - 2*x*y)*
     -       (1 + x + x**2 - x*y)*
     -       (5 + 5*x**6 + 4*x*(8 + 5*y) + 
     -         4*x**5*(8 + 5*y) + 
     -         8*x**3*(-10 + 5*y + 4*y**2) - 
     -         x**2*(49 + 32*y + 20*y**2) - 
     -         x**4*(49 + 32*y + 20*y**2)) - 
     -      4*(1 + x)*(1 + y)*(1 + x**2 - 2*x*y)*
     -       (1 + x + x**2 - x*y)*
     -       (-18 + 40*x*y + 41*x**8*y + 
     -         x**2*(8 - 99*y - 40*y**2) - 
     -         x**7*(35 + 72*y + 41*y**2) + 
     -         x**6*(132 - 173*y + 72*y**2) + 
     -         x**3*(57 - 88*y + 99*y**2) + 
     -         x**4*(230 - 313*y + 128*y**2) + 
     -         x**5*(58 - 200*y + 214*y**2)) - 
     -      36*logMT2mu2*(-1 + x)**3*(1 + x)*
     -       (1 + x**2 - 2*x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       + 2*log1px*(-1 + x)**3*(1 + x)**2*
     -       (1 + x**2 - 2*x*y)*
     -       (-17*(1 + y) + 109*x**7*(1 + y) + 
     -         x**6*(280 + 139*y - 285*y**2) + 
     -         x*(-8 + 265*y + 129*y**2) - 
     -         x**2*(322 + 107*y + 441*y**2 + 
     -            224*y**3) + 
     -         x**5*(290 + 343*y - 27*y**2 + 
     -            352*y**3) + 
     -         x**4*(11 + 49*y - 586*y**2 - 
     -            224*y**3 - 176*y**4) + 
     -         x**3*(-151 + 499*y + 314*y**2 + 
     -            352*y**3 + 112*y**4)) - 
     -      2*log1pxpx2mxy*(-1 + x)**3*(1 + y)*
     -       (-40 + 68*x**11 - 
     -         5*x**10*(-53 + 75*y) + 
     -         x*(-77 + 255*y) + 
     -         x**2*(-361 + 499*y - 644*y**2) + 
     -         x**9*(683 - 1211*y + 814*y**2) + 
     -         x**8*(1265 - 2503*y + 1689*y**2 - 
     -            919*y**3) + 
     -         x**3*(-805 + 1349*y - 921*y**2 + 
     -            809*y**3) + 
     -         x**4*(-971 + 1393*y - 1867*y**2 + 
     -            397*y**3 - 524*y**4) + 
     -         x**7*(1567 - 2747*y + 2831*y**2 - 
     -            755*y**3 + 556*y**4) - 
     -         2*x**6*
     -          (-401 + 1059*y - 419*y**2 + 
     -            643*y**3 + 66*y**4 + 72*y**5) + 
     -         2*x**5*
     -          (-94 + 345*y + 86*y**2 + 
     -            509*y**3 + 114*y**4 + 72*y**5)) 
     -       + logx*(-1 + x)**3*(1 + y)*
     -       (-45 + 91*x**11 + 
     -         x**10*(336 - 507*y) + 
     -         x*(-44 + 257*y) + 
     -         x**2*(-248 + 439*y - 626*y**2) + 
     -         x**9*(832 - 1637*y + 1106*y**2) + 
     -         x**8*(1781 - 3340*y + 2196*y**2 - 
     -            1298*y**3) + 
     -         x**3*(-727 + 1036*y - 784*y**2 + 
     -            878*y**3) - 
     -         2*x**4*
     -          (458 - 200*y + 1052*y**2 + 
     -            41*y**3 + 376*y**4) + 
     -         x**7*(2608 - 3752*y + 4252*y**2 - 
     -            594*y**3 + 896*y**4) - 
     -         2*x**6*
     -          (-818 + 2064*y - 475*y**2 + 
     -            1166*y**3 + 272*y**4 + 144*y**5)
     -           + 2*x**5*
     -          (180 - 80*y + 801*y**2 + 
     -            882*y**3 + 344*y**4 + 144*y**5))
     -        - 2*log1py*(-1 + x)**3*
     -       (1 + x + x**2 - x*y)*
     -       (18*(1 + y) + 47*x**8*(1 + y)**2 + 
     -         x*(-25 + 40*y - 79*y**2) + 
     -         x**7*(56 + 119*y - 72*y**2 - 
     -            135*y**3) + 
     -         x**2*(-70 + 299*y - 198*y**2 + 
     -            153*y**3) + 
     -         x**6*(-184 + 31*y + 64*y**2 + 
     -            157*y**3 + 164*y**4) - 
     -         x**3*(22 - 499*y + 854*y**2 + 
     -            131*y**3 + 196*y**4) + 
     -         x**4*(93 + 1350*y + 743*y**2 + 
     -            1274*y**3 + 492*y**4 + 144*y**5)
     -           - x**5*
     -          (393 + 306*y + 1219*y**2 + 
     -            1030*y**3 + 588*y**4 + 144*y**5)
     -         )))/
     -  (9d0*x*(-1 + x**2)**4*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      res(2)=dcmplx(doublepole,zero)
      res(1)=dcmplx(rsinglepole,isinglepole)
      res(0)=dcmplx(rfinite,ifinite)
      return
      end


      subroutine gg2ttx_sHFmatrix_13(s,t,mt2,mu2,res)
      use Func_PSI
      implicit none
      double complex res(0:2)
      double precision doublepole,rsinglepole,isinglepole
      double precision rfinite,ifinite
      double precision s,t,mt2,mu2
      double precision x,y,xs
      double precision logtwo,log4pi,zero,one,two,four,Pi
      parameter (zero=0d0)
      parameter (one=1d0)
      parameter (two=2d0)
      parameter (four=4d0)
      parameter (logtwo=0.6931471805599453094172d0)
      parameter (log4pi=2.53102424696929079298d0)
      parameter (Pi=3.141592653589793238462643d0)
      double precision logx,log1mx,log1px,logy,log1py
      double precision log1pxpx2mxy,log1px2mxy,logMT2mu2
      double precision Li2x2,Li2mx,Li2my,Li2m1oxmxpy
      integer i
      xs=s/mt2
      x=-one+xs/two-dsqrt(-xs+xs**2/four)
      IF(x.GT.1d0.OR.x.LT.0d0)THEN
         WRITE(*,*)"Error: x>1 or x<0 !"
         STOP
      ENDIF
      y=-t/mt2
      IF(y.GT.one/x+x)THEN
         WRITE(*,*)"Error: y>1/x+x !"
         STOP
      ENDIF
      ! logs and Li2
      logx=DLOG(x)
      log1mx=DLOG(one-x)
      log1px=DLOG(one+x)
      logy=DLOG(y)
      log1py=DLOG(one+y)
      log1pxpx2mxy=DLOG(one+x+x**2-x*y)
      log1px2mxy=DLOG(one+x**2-x*y)
      logMT2mu2=DLOG(mt2/mu2)
      Li2x2=li2(x**2)
      Li2mx=li2(-x)
      Li2my=li2(-y)
      Li2m1oxmxpy=li2(-one/x-x+y)
      ! double pole
      doublepole=        (-32*(1 + y + x**6*(1 + y) + 
     -      x*(3 + 4*y - 3*y**2) + 
     -      x**5*(3 + 4*y - 3*y**2) - 
     -      2*x**3*y*(-4 + 7*y + y**3) + 
     -      x**2*(3 + 11*y - 4*y**2 + 4*y**3) + 
     -      x**4*(3 + 11*y - 4*y**2 + 4*y**3)))/
     -  (x*(1 + y)**2*(1 + x + x**2 - x*y)**2)
      rsinglepole=        (16*(5 + 51*x + 231*x**2 + 396*x**3 + 
     -      231*x**4 + 51*x**5 + 5*x**6 + 5*y - 
     -      52*x*y - 161*x**2*y - 104*x**3*y - 
     -      161*x**4*y - 52*x**5*y + 5*x**6*y + 
     -      21*x*y**2 + 52*x**2*y**2 + 
     -      218*x**3*y**2 + 52*x**4*y**2 + 
     -      21*x**5*y**2 - 52*x**2*y**3 - 
     -      52*x**4*y**3 + 26*x**3*y**4 + 
     -      27*log1px*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       + 18*logMT2mu2*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       + (9*log1py*(2 + x + 2*x**2 - 3*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 - 
     -      (9*log1pxpx2mxy*
     -         (1 + x**2 - x*(1 + 3*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 - 
     -      (logx*(-8 + x**3 + x**2*(28 + 27*y) - 
     -           x*(35 + 27*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*(1 + x)**2)))/
     -  (9d0*x*(1 + y)**2*(1 + x + x**2 - x*y)**2)
      isinglepole=        (16*Pi*(1 + y + x**6*(1 + y) + 
     -      x*(3 + 4*y - 3*y**2) + 
     -      x**5*(3 + 4*y - 3*y**2) - 
     -      2*x**3*y*(-4 + 7*y + y**3) + 
     -      x**2*(3 + 11*y - 4*y**2 + 4*y**3) + 
     -      x**4*(3 + 11*y - 4*y**2 + 4*y**3)))/
     -  (x*(-1 + x**2)*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      rfinite=        (4*((-648*log1px*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + x + x**6 + x**5*(1 - 2*y) - 
     -           2*x*y - 2*x**3*(1 + 2*y) + 
     -           x**2*(1 + 2*y**2) + 
     -           x**4*(1 + 2*y**2)))/(-1 + x)**2 
     -       - 162*log1px**2*(1 + y)**2*
     -       (1 + x + x**2 - x*y)**2*
     -       (3 + 3*x**4 - 8*x*(-1 + y) - 
     -         8*x**3*(-1 + y) + 
     -         2*x**2*(9 + 4*y**2)) - 
     -      54*log1py**2*(1 + y)**2*
     -       (1 + x + x**2 - x*y)**2*
     -       (2 + 2*x**4 + x*(9 - 7*y) + 
     -         x**3*(9 - 7*y) + 
     -         2*x**2*(10 - 3*y + 5*y**2)) - 
     -      54*log1pxpx2mxy**2*(1 + y)**2*
     -       (1 + x + x**2 - x*y)**2*
     -       (5 + 5*x**4 + x*(3 - 13*y) + 
     -         x**3*(3 - 13*y) + 
     -         2*x**2*(13 + 3*y + 5*y**2)) - 
     -      324*log1px*logMT2mu2*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - 108*logMT2mu2**2*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - (42*Li2x2*(1 + x**2)*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(-1 + x**2) - 
     -      (84*log1mx*logx*(1 + x**2)*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(-1 + x**2) - 
     -      (108*log1py*logMT2mu2*(1 + y)*
     -         (2 + x + 2*x**2 - 3*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 + 
     -      (108*log1pxpx2mxy*logMT2mu2*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + x**2 - x*(1 + 3*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 + 
     -      (12*logMT2mu2*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-8 + x**3 + x**2*(28 + 27*y) - 
     -           x*(35 + 27*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*(1 + x)**2) - 
     -      48*logMT2mu2*(1 + y)*
     -       (1 + x + x**2 - x*y)*
     -       (7*(1 + y) + 7*x**6*(1 + y) + 
     -         x*(30 + 10*y - 12*y**2) + 
     -         x**5*(30 + 10*y - 12*y**2) + 
     -         x**2*(75 + 23*y - 10*y**2 + 
     -            10*y**3) + 
     -         x**4*(75 + 23*y - 10*y**2 + 
     -            10*y**3) + 
     -         x**3*(99 + 20*y - 26*y**2 - 5*y**4)
     -         ) + 108*log1pxpx2mxy*log1py*
     -       (1 + y)*(1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(-1 + 4*y - 3*y**2) + 
     -         x**5*(-1 + 4*y - 3*y**2) + 
     -         x**2*
     -          (-5 + 19*y - 4*y**2 + 4*y**3) + 
     -         x**4*
     -          (-5 + 19*y - 4*y**2 + 4*y**3) - 
     -         2*x**3*(8 - 4*y + 11*y**2 + y**4)) 
     -       - (324*log1px*log1py*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(-1 + 4*y - 3*y**2) + 
     -           x**5*(-1 + 4*y - 3*y**2) + 
     -           x**2*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            + x**4*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            - 2*x**3*
     -            (13 + 13*y**2 + 4*y**3 + 2*y**4)
     -           ))/(1 + x)**2 + 
     -      (324*log1px*log1pxpx2mxy*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (2 + 2*x**8 + x*(7 - 9*y) + 
     -           x**7*(7 - 9*y) + 
     -           x**2*(21 - 28*y + 15*y**2) + 
     -           x**6*(21 - 28*y + 15*y**2) + 
     -           x**3*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**5*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**4*
     -            (62 - 64*y + 50*y**2 - 8*y**3 + 
     -              4*y**4)))/(1 + x)**2 - 
     -      6*Li2m1oxmxpy*(1 + y)**2*
     -       (50 + 50*x**8 - 3*x*(-61 + 71*y) - 
     -         3*x**7*(-61 + 71*y) + 
     -         x**2*(553 - 480*y + 355*y**2) + 
     -         x**6*(553 - 480*y + 355*y**2) + 
     -         x**3*(898 - 1176*y + 443*y**2 - 
     -            271*y**3) + 
     -         x**5*(898 - 1176*y + 443*y**2 - 
     -            271*y**3) + 
     -         x**4*(1131 - 1230*y + 906*y**2 - 
     -            146*y**3 + 79*y**4)) - 
     -      6*Li2my*(1 + x + x**2 - x*y)**2*
     -       (4*(3 + 8*y + 4*y**2) + 
     -         4*x**4*(3 + 8*y + 4*y**2) + 
     -         x*(79 + 145*y + 5*y**2 - 
     -            45*y**3) + 
     -         x**3*(79 + 145*y + 5*y**2 - 
     -            45*y**3) + 
     -         x**2*(149 + 334*y + 228*y**2 + 
     -            146*y**3 + 79*y**4)) + 
     -      (6*log1pxpx2mxy*logx*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (-50 + 22*x**9 + x**8*(1 - 53*y) + 
     -           x*(-197 + 109*y) + 
     -           x**2*(-463 + 131*y - 30*y**2) + 
     -           x**7*(113 + 149*y - 12*y**2) - 
     -           x**3*
     -            (488 - 36*y + 205*y**2 + 
     -              137*y**3) + 
     -           x**6*
     -            (124 + 342*y + 65*y**2 + 
     -              151*y**3) - 
     -           x**5*
     -            (202 + 194*y + 571*y**2 + 
     -              267*y**3 + 108*y**4) + 
     -           x**4*
     -            (-148 + 544*y + 473*y**2 + 
     -              309*y**3 + 108*y**4)))/
     -       ((-1 + x)*(1 + x)**2) + 
     -      (12*Li2mx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (31*(1 + y) + 31*x**10*(1 + y) - 
     -           x*(9 + 59*y + 106*y**2) - 
     -           x**9*(9 + 59*y + 106*y**2) + 
     -           x**2*
     -            (22 + 287*y + 303*y**2 + 
     -              150*y**3) + 
     -           x**8*
     -            (22 + 287*y + 303*y**2 + 
     -              150*y**3) - 
     -           x**3*
     -            (157 + 56*y + 312*y**2 + 
     -              488*y**3 + 75*y**4) - 
     -           x**7*
     -            (157 + 56*y + 312*y**2 + 
     -              488*y**3 + 75*y**4) + 
     -           x**5*
     -            (-588 + 6*y - 364*y**2 - 
     -              976*y**3 + 94*y**4) + 
     -           x**4*
     -            (-241 + 658*y + 729*y**2 - 
     -              38*y**3 + 244*y**4) + 
     -           x**6*
     -            (-241 + 658*y + 729*y**2 - 
     -              38*y**3 + 244*y**4)))/
     -       ((-1 + x)**3*(1 + x)) + 
     -      (3*logx**2*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (50 + 26*x**11 + 
     -           x**10*(19 - 158*y) + 
     -           x*(165 - 96*y) + 
     -           x**2*(146 + 167*y - 30*y**2) + 
     -           x**9*(-92 - 143*y + 358*y**2) + 
     -           x**8*
     -            (173 + 281*y - 724*y**2 - 
     -              442*y**3) + 
     -           x**3*
     -            (-429 + 535*y + 226*y**2 + 
     -              292*y**3) - 
     -           x**4*
     -            (747 + 293*y + 2204*y**2 + 
     -              1062*y**3 + 216*y**4) + 
     -           x**7*
     -            (-77 + 2433*y + 562*y**2 + 
     -              1400*y**3 + 216*y**4) - 
     -           x**6*
     -            (1801 + 429*y + 4386*y**2 + 
     -              1520*y**3 + 648*y**4) + 
     -           x**5*
     -            (-25 + 3751*y + 1878*y**2 + 
     -              2196*y**3 + 648*y**4)))/
     -       ((-1 + x)**3*(1 + x)**2) - 
     -      (12*log1px*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-24*(1 + y) + 3*x**9*(1 + y) + 
     -           2*x*(-1 + 41*y + 56*y**2) - 
     -           x**8*(110 + 215*y + 77*y**2) + 
     -           x**2*
     -            (34 + 144*y + 47*y**2 - 
     -              203*y**3) + 
     -           x**7*
     -            (-209 - 396*y + 128*y**2 + 
     -              175*y**3) - 
     -           x**6*
     -            (59 + 478*y + 133*y**2 + 
     -              231*y**3 + 209*y**4) + 
     -           x**3*
     -            (-32 + 170*y + 434*y**2 + 
     -              147*y**3 + 223*y**4) - 
     -           x**4*
     -            (145 + 527*y + 525*y**2 + 
     -              758*y**3 + 303*y**4 + 108*y**5
     -              ) + 
     -           x**5*
     -            (152 + 121*y + 798*y**2 + 
     -              646*y**3 + 345*y**4 + 108*y**5
     -              )))/((-1 + x)*(1 + x)**2) + 
     -      (6*log1py*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-16*(1 + y) + 2*x**9*(1 + y) - 
     -           x**8*(41 + 72*y + 47*y**2) + 
     -           x*(13 - 54*y + 61*y**2) + 
     -           x**2*
     -            (225 - 172*y + 119*y**2 - 
     -              124*y**3) + 
     -           x**7*
     -            (-225 - 262*y - 7*y**2 + 
     -              110*y**3) - 
     -           x**6*
     -            (260 + 414*y + 295*y**2 + 
     -              282*y**3 + 173*y**4) + 
     -           x**3*
     -            (442 - 216*y + 659*y**2 + 
     -              240*y**3 + 187*y**4) - 
     -           x**4*
     -            (-236 + 874*y + 465*y**2 + 
     -              786*y**3 + 339*y**4 + 108*y**5
     -              ) + 
     -           x**5*
     -            (128 + 62*y + 759*y**2 + 
     -              618*y**3 + 381*y**4 + 108*y**5
     -              )))/((-1 + x)*(1 + x)**2) + 
     -      (24*log1pxpx2mxy*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (9 + 9*x**12 + x*(39 - 68*y) + 
     -           x**11*(39 - 68*y) + 
     -           x**2*(129 - 215*y + 197*y**2) + 
     -           x**10*(129 - 215*y + 197*y**2) + 
     -           x**3*
     -            (235 - 683*y + 436*y**2 - 
     -              300*y**3) + 
     -           x**9*
     -            (235 - 683*y + 436*y**2 - 
     -              300*y**3) + 
     -           x**4*
     -            (417 - 1071*y + 1303*y**2 - 
     -              423*y**3 + 263*y**4) + 
     -           x**8*
     -            (417 - 1071*y + 1303*y**2 - 
     -              423*y**3 + 263*y**4) + 
     -           x**5*
     -            (518 - 1670*y + 1605*y**2 - 
     -              1203*y**3 + 203*y**4 - 
     -              128*y**5) + 
     -           x**7*
     -            (518 - 1670*y + 1605*y**2 - 
     -              1203*y**3 + 203*y**4 - 
     -              128*y**5) + 
     -           x**6*
     -            (582 - 1730*y + 2189*y**2 - 
     -              972*y**3 + 582*y**4 - 
     -              40*y**5 + 27*y**6)))/
     -       ((1 + x)**2*(1 + x**2 - x*y)**2) - 
     -      (24*log1py*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (y*(2 + 15*y + 12*y**2) + 
     -           x**6*y*(2 + 15*y + 12*y**2) + 
     -           x*(2 + 5*y + 58*y**2 - 11*y**3 - 
     -              28*y**4) + 
     -           x**5*
     -            (2 + 5*y + 58*y**2 - 11*y**3 - 
     -              28*y**4) + 
     -           x**2*
     -            (10 - y + 126*y**2 - 43*y**3 - 
     -              3*y**4 + 34*y**5) + 
     -           x**4*
     -            (10 - y + 126*y**2 - 43*y**3 - 
     -              3*y**4 + 34*y**5) - 
     -           x**3*
     -            (-16 + 8*y - 139*y**2 + 
     -              148*y**3 + 112*y**4 + 
     -              40*y**5 + 27*y**6)))/
     -       ((1 + x)**2*y**2) + 
     -      (24*logx*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (8 + x**14 + x*(47 - 10*y) + 
     -           x**13*(19 + 11*y) + 
     -           x**12*(40 - 119*y - 59*y**2) - 
     -           2*x**2*(-55 + 91*y + 19*y**2) + 
     -           x**3*
     -            (256 - 296*y + 397*y**2 + 
     -              121*y**3) + 
     -           x**11*
     -            (144 - 142*y + 383*y**2 + 
     -              128*y**3) + 
     -           x**10*
     -            (117 - 816*y + 275*y**2 - 
     -              654*y**3 - 155*y**4) + 
     -           x**4*
     -            (271 - 991*y + 359*y**2 - 
     -              591*y**3 - 155*y**4) + 
     -           x**5*
     -            (421 - 910*y + 1969*y**2 - 
     -              200*y**3 + 538*y**4 + 101*y**5
     -              ) + 
     -           x**9*
     -            (281 - 693*y + 1969*y**2 - 
     -              214*y**3 + 594*y**4 + 101*y**5
     -              ) - 
     -           x**6*
     -            (-312 + 1702*y - 1403*y**2 + 
     -              2201*y**3 + 68*y**4 + 
     -              263*y**5 + 27*y**6) - 
     -           x**8*
     -            (-221 + 1590*y - 1354*y**2 + 
     -              2278*y**3 + 54*y**4 + 
     -              277*y**5 + 27*y**6) + 
     -           x**7*
     -            (344 - 1200*y + 3004*y**2 - 
     -              807*y**3 + 1244*y**4 + 
     -              122*y**5 + 54*y**6)))/
     -       (-1 + x**4 + x*y - x**3*y)**2 + 
     -      (-(x*(48 + 3*(400 + 53*Pi**2)*y + 
     -              (-288 + 590*Pi**2)*y**2 + 
     -              (-3048 + 439*Pi**2)*y**3 + 
     -              12*(-134 + 3*Pi**2)*y**4)) + 
     -         x**13*
     -          (48 + 3*(400 + 21*Pi**2)*y + 
     -            4*(-72 + 61*Pi**2)*y**2 + 
     -            (-3048 + 203*Pi**2)*y**3 + 
     -            2*(-804 + 25*Pi**2)*y**4) + 
     -         x**12*
     -          (144 + (2928 - 206*Pi**2)*y + 
     -            (1272 - 439*Pi**2)*y**2 + 
     -            (1608 - 654*Pi**2)*y**3 + 
     -            (6096 - 455*Pi**2)*y**4 + 
     -            (2976 - 110*Pi**2)*y**5) + 
     -         x**2*(-144 + 
     -            24*(-122 + 9*Pi**2)*y + 
     -            53*(-24 + 11*Pi**2)*y**2 + 
     -            8*(-201 + 221*Pi**2)*y**3 + 
     -            (-6096 + 1451*Pi**2)*y**4 + 
     -            6*(-496 + 21*Pi**2)*y**5) + 
     -         x**11*
     -          (48 + (984 - 107*Pi**2)*y + 
     -            6*(-696 + 133*Pi**2)*y**2 + 
     -            2*(-3144 + 889*Pi**2)*y**3 + 
     -            8*(-762 + 137*Pi**2)*y**4 + 
     -            3*(-2680 + 91*Pi**2)*y**5 + 
     -            130*(-24 + Pi**2)*y**6) - 
     -         x**3*(48 + (984 + 137*Pi**2)*y + 
     -            2*(-2088 + 509*Pi**2)*y**2 + 
     -            6*(-1048 + 223*Pi**2)*y**3 + 
     -            8*(-762 + 283*Pi**2)*y**4 + 
     -            (-8040 + 1909*Pi**2)*y**5 + 
     -            26*(-120 + 7*Pi**2)*y**6) + 
     -         2*Pi**2*x**7*y*
     -          (-846 + 1343*y + 1364*y**2 - 
     -            1605*y**3 + 810*y**4 + 
     -            1057*y**5 - 416*y**6 + 117*y**7)
     -           - x**10*
     -          (96 + 8*(375 + 64*Pi**2)*y + 
     -            12*(44 + 39*Pi**2)*y**2 + 
     -            8*(-849 + 80*Pi**2)*y**3 + 
     -            (-8016 + 2675*Pi**2)*y**4 + 
     -            6*(-1452 + 283*Pi**2)*y**5 - 
     -            (6936 + 161*Pi**2)*y**6 + 
     -            16*(-114 + 5*Pi**2)*y**7) + 
     -         x**4*(96 - 4*(-750 + 73*Pi**2)*y + 
     -            264*(2 + 5*Pi**2)*y**2 + 
     -            (-6792 + 2870*Pi**2)*y**3 + 
     -            3*(-2672 + 429*Pi**2)*y**4 + 
     -            12*(-726 + 101*Pi**2)*y**5 + 
     -            (-6936 + 1355*Pi**2)*y**6 + 
     -            24*(-76 + 5*Pi**2)*y**7) + 
     -         x**9*(-336 - 
     -            (7056 + 601*Pi**2)*y + 
     -            6*(308 + 227*Pi**2)*y**2 + 
     -            (3384 + 3579*Pi**2)*y**3 + 
     -            4*(-2376 + 71*Pi**2)*y**4 + 
     -            (-7296 + 956*Pi**2)*y**5 + 
     -            8*(-771 + 226*Pi**2)*y**6 - 
     -            24*(152 + 9*Pi**2)*y**7 + 
     -            4*(-114 + 5*Pi**2)*y**8) + 
     -         x**5*(336 - 
     -            21*(-336 + 59*Pi**2)*y + 
     -            6*(-308 + 193*Pi**2)*y**2 - 
     -            (3384 + 175*Pi**2)*y**3 + 
     -            (9504 - 4336*Pi**2)*y**4 + 
     -            (7296 - 972*Pi**2)*y**5 + 
     -            6*(1028 + 75*Pi**2)*y**6 - 
     -            8*(-456 + 77*Pi**2)*y**7 - 
     -            6*(-76 + 5*Pi**2)*y**8) + 
     -         x**8*(-240 - 
     -            20*(276 + 73*Pi**2)*y + 
     -            (4416 + 709*Pi**2)*y**2 + 
     -            (5568 + 662*Pi**2)*y**3 - 
     -            2*(744 + 2671*Pi**2)*y**4 - 
     -            6*(-956 + 253*Pi**2)*y**5 + 
     -            (4008 + 995*Pi**2)*y**6 - 
     -            8*(-228 + 127*Pi**2)*y**7 + 
     -            6*(152 + 9*Pi**2)*y**8) + 
     -         x**6*(240 + 
     -            (5520 - 1642*Pi**2)*y + 
     -            (-4416 + 2743*Pi**2)*y**2 + 
     -            2*(-2784 + 881*Pi**2)*y**3 + 
     -            (1488 - 3562*Pi**2)*y**4 + 
     -            4*(-1434 + 289*Pi**2)*y**5 + 
     -            3*(-1336 + 459*Pi**2)*y**6 - 
     -            48*(38 + 17*Pi**2)*y**7 + 
     -            2*(-456 + 77*Pi**2)*y**8) + 
     -         2*y*(Pi**2*(3 + 2*y + y**2) - 
     -            12*(17 + 33*y + 16*y**2)) - 
     -         2*x**14*y*
     -          (Pi**2*(7 + 10*y + 5*y**2) - 
     -            12*(17 + 33*y + 16*y**2)))/
     -       ((-1 + x)**3*(1 + x)*y*
     -         (1 + x**2 - x*y))))/
     -  (27d0*x*(1 + y)**3*(1 + x + x**2 - x*y)**3)
      ifinite=        (4*Pi*((2*log1mx*(-1 + x)**3*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + x**4 + 2*x*(4 + y) + 
     -           2*x**3*(4 + y) - 
     -           2*x**2*(-6 + y**2)))/(x*(1 + x)) 
     -       - (8*(1 + y)*(1 + x + x**2 - x*y)*
     -         (-1 + x*(-2 + y) + x**6*y - 
     -           x**5*(-2 + y)*y + 
     -           x**3*(1 + 3*y) + 
     -           x**4*(y - 2*y**2) - 
     -           x**2*(2 + y**2)))/(x*(1 + x)) - 
     -      (4*logMT2mu2*(-1 + x)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(x*(1 + x)) - 
     -      (2*log1pxpx2mxy*(-1 + x)*(1 + y)*
     -         (9 + 4*x**8 + x**7*(19 - 13*y) + 
     -           5*y + 
     -           3*x**6*(13 - 13*y + 6*y**2) - 
     -           x*(-11 + y + 12*y**2) + 
     -           x**5*
     -            (50 - 58*y + 23*y**2 - 13*y**3) 
     -            + x**2*
     -            (2 + 4*y - 3*y**2 + 11*y**3) + 
     -           x**4*
     -            (42 - 30*y + 29*y**2 + y**3 + 
     -              4*y**4) - 
     -           x**3*
     -            (-8 + 20*y + 15*y**2 + 7*y**3 + 
     -              4*y**4)))/(1 + x)**2 - 
     -      (2*log1py*(-1 + x)*
     -         (1 + x + x**2 - x*y)*
     -         (2*(1 + y) + 3*x**6*(1 + y)**2 + 
     -           x*(-1 + 12*y - 3*y**2) + 
     -           x**5*
     -            (10 + 15*y + 2*y**2 - 3*y**3) + 
     -           x**2*(-14 + 29*y + 5*y**3) + 
     -           x**3*
     -            (-25 + y - 27*y**2 - 9*y**3 - 
     -              4*y**4) + 
     -           x**4*
     -            (1 + 23*y + 17*y**2 + 15*y**3 + 
     -              4*y**4)))/(x*(1 + x)**2) + 
     -      (2*log1px*(-1 + x)*
     -         (3*(1 + y) + 9*x**7*(1 + y) + 
     -           x**6*(28 + 23*y - 21*y**2) + 
     -           x*(12 + 29*y + y**2) + 
     -           x**2*
     -            (-14 + y - 41*y**2 - 8*y**3) + 
     -           x**5*
     -            (22 + 27*y - 19*y**2 + 24*y**3) 
     -            + x**4*
     -            (3 + 21*y - 42*y**2 - 8*y**3 - 
     -              12*y**4) + 
     -           x**3*
     -            (-7 + 47*y + 10*y**2 + 
     -              24*y**3 + 4*y**4)))/x + 
     -      (logx*(-1 + x)*(1 + y)*
     -         (-1 + 7*x**9 + x**8*(32 - 21*y) + 
     -           x*(8 + 3*y) + 
     -           x**2*(17 - 5*y - 8*y**2) + 
     -           x**7*(61 - 61*y + 28*y**2) + 
     -           x**6*
     -            (85 - 93*y + 26*y**2 - 22*y**3) 
     -            + x**3*
     -            (21 - 9*y + 10*y**2 + 14*y**3) 
     -            + x**5*
     -            (95 - 53*y + 50*y**2 + 
     -              10*y**3 + 8*y**4) - 
     -           x**4*
     -            (-43 + 65*y + 26*y**2 + 
     -              18*y**3 + 8*y**4)))/
     -       (x*(1 + x)**2)))/
     -  ((-1 + x)**2*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      res(2)=dcmplx(doublepole,zero)
      res(1)=dcmplx(rsinglepole,isinglepole)
      res(0)=dcmplx(rfinite,ifinite)
      return
      end


      subroutine gg2ttx_sHFmatrix_22(s,t,mt2,mu2,res)
      use Func_PSI
      implicit none
      double complex res(0:2)
      double precision doublepole,rsinglepole,isinglepole
      double precision rfinite,ifinite
      double precision s,t,mt2,mu2
      double precision x,y,xs
      double precision logtwo,log4pi,zero,one,two,four,Pi
      parameter (zero=0d0)
      parameter (one=1d0)
      parameter (two=2d0)
      parameter (four=4d0)
      parameter (logtwo=0.6931471805599453094172d0)
      parameter (log4pi=2.53102424696929079298d0)
      parameter (Pi=3.141592653589793238462643d0)
      double precision logx,log1mx,log1px,logy,log1py
      double precision log1pxpx2mxy,log1px2mxy,logMT2mu2
      double precision Li2x2,Li2mx,Li2my,Li2m1oxmxpy
      integer i
      xs=s/mt2
      x=-one+xs/two-dsqrt(-xs+xs**2/four)
      IF(x.GT.1d0.OR.x.LT.0d0)THEN
         WRITE(*,*)"Error: x>1 or x<0 !"
         STOP
      ENDIF
      y=-t/mt2
      IF(y.GT.one/x+x)THEN
         WRITE(*,*)"Error: y>1/x+x !"
         STOP
      ENDIF
      ! logs and Li2
      logx=DLOG(x)
      log1mx=DLOG(one-x)
      log1px=DLOG(one+x)
      logy=DLOG(y)
      log1py=DLOG(one+y)
      log1pxpx2mxy=DLOG(one+x+x**2-x*y)
      log1px2mxy=DLOG(one+x**2-x*y)
      logMT2mu2=DLOG(mt2/mu2)
      Li2x2=li2(x**2)
      Li2mx=li2(-x)
      Li2my=li2(-y)
      Li2m1oxmxpy=li2(-one/x-x+y)
      ! double pole
      doublepole=        (-96*(1 + x**2 - 2*x*y)**2*
     -    (1 + y + x**6*(1 + y) + 
     -      x*(3 + 4*y - 3*y**2) + 
     -      x**5*(3 + 4*y - 3*y**2) - 
     -      2*x**3*y*(-4 + 7*y + y**3) + 
     -      x**2*(3 + 11*y - 4*y**2 + 4*y**3) + 
     -      x**4*(3 + 11*y - 4*y**2 + 4*y**3)))/
     -  (x*(1 + x)**4*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      rsinglepole=        (16*(1 + x**2 - 2*x*y)*
     -    (-18*log1pxpx2mxy*(1 + x)*(1 + y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       + (18*log1px*(1 + x)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x + 
     -      (18*logMT2mu2*(1 + x)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x + 
     -      (18*log1py*(1 + x)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x - 
     -      (2*logx*(-4 + x**2 + 5*x**4 + 
     -           x*(9 + 17*y) - x**3*(9 + 19*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*x) + 
     -      ((1 + x)*(1 + x**2 - 2*x*y)*
     -         (5*(1 + y) + 5*x**6*(1 + y) + 
     -           x*(51 - 52*y + 21*y**2) + 
     -           x**5*(51 - 52*y + 21*y**2) + 
     -           x**2*
     -            (231 - 161*y + 52*y**2 - 
     -              52*y**3) + 
     -           x**4*
     -            (231 - 161*y + 52*y**2 - 
     -              52*y**3) + 
     -           2*x**3*
     -            (198 - 52*y + 109*y**2 + 
     -              13*y**4)))/x))/
     -  (3d0*(1 + x)**5*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      isinglepole=zero
      rfinite=        (8*(1 + x**2 - 2*x*y)*
     -    ((54*log1px**2*(-1 + x)**2*(1 + x)**3*
     -         (1 + y)**2*(1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)**2)/x + 
     -      (54*log1pxpx2mxy**2*(1 + x)**3*
     -         (1 + y)**2*(1 + x + x**2 - x*y)**2*
     -         (2 + 2*x**4 + x*(3 - 5*y) + 
     -           x**3*(3 - 5*y) + 
     -           2*x**2*(5 + y + 2*y**2)))/x - 
     -      (54*log1py**2*(1 + x)**3*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + x**4 + x*(5 - 3*y) + 
     -           x**3*(5 - 3*y) + 
     -           x**2*(8 - 2*y + 4*y**2)))/x - 
     -      (108*log1px*(1 + x)**3*(1 + y)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (2 + 2*x**6 + x*(-6 + y) + 
     -           x**5*(-6 + y) - 
     -           x**2*(-5 + 14*y + y**2) - 
     -           x**4*(-5 + 14*y + y**2) + 
     -           2*x**3*(5 + y + 7*y**2)))/
     -       ((-1 + x)**4*x) + 
     -      108*log1pxpx2mxy*logMT2mu2*(1 + x)*
     -       (1 + y)**2*(1 + x + x**2 - x*y)*
     -       (1 + y + x**6*(1 + y) + 
     -         x*(3 + 4*y - 3*y**2) + 
     -         x**5*(3 + 4*y - 3*y**2) - 
     -         2*x**3*y*(-4 + 7*y + y**3) + 
     -         x**2*
     -          (3 + 11*y - 4*y**2 + 4*y**3) + 
     -         x**4*(3 + 11*y - 4*y**2 + 4*y**3)) 
     -       - (108*log1px*logMT2mu2*(1 + x)*
     -         (1 + y)*(1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x - 
     -      (54*logMT2mu2**2*(1 + x)*(1 + y)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x + 
     -      (6*Li2x2*(1 + x**2)*(1 + y)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*x) + 
     -      (12*log1mx*logx*(1 + x**2)*(1 + y)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*x) - 
     -      (108*log1py*logMT2mu2*(1 + x)*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x + 
     -      (12*logMT2mu2*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-4 + x**2 + 5*x**4 + 
     -           x*(9 + 17*y) - x**3*(9 + 19*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*x) - 
     -      (24*logMT2mu2*(1 + x)*(1 + y)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (7*(1 + y) + 7*x**6*(1 + y) + 
     -           x*(30 + 10*y - 12*y**2) + 
     -           x**5*(30 + 10*y - 12*y**2) + 
     -           x**2*
     -            (75 + 23*y - 10*y**2 + 10*y**3) 
     -            + x**4*
     -            (75 + 23*y - 10*y**2 + 10*y**3) 
     -            + x**3*
     -            (99 + 20*y - 26*y**2 - 5*y**4)))
     -        /x - (108*log1px*log1py*(1 + x)*
     -         (1 + y)*(1 + x + x**2 - x*y)**2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(-1 + 4*y - 3*y**2) + 
     -           x**5*(-1 + 4*y - 3*y**2) + 
     -           x**2*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            + x**4*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            - 2*x**3*
     -            (13 + 13*y**2 + 4*y**3 + 2*y**4)
     -           ))/x - 
     -      (108*log1px*log1pxpx2mxy*(1 + x)*
     -         (1 + y)**2*(1 + x + x**2 - x*y)*
     -         (2 + 2*x**8 + x*(7 - 9*y) + 
     -           x**7*(7 - 9*y) + 
     -           x**2*(21 - 28*y + 15*y**2) + 
     -           x**6*(21 - 28*y + 15*y**2) + 
     -           x**3*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**5*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**4*
     -            (62 - 64*y + 50*y**2 - 8*y**3 + 
     -              4*y**4)))/x - 
     -      (12*Li2mx*(1 + y)*(1 + x**2 - 2*x*y)*
     -         (1 + x + x**2 - x*y)*
     -         (14*(1 + y) + 14*x**12*(1 + y) + 
     -           x*(17 - 9*y - 34*y**2) + 
     -           x**11*(17 - 9*y - 34*y**2) + 
     -           x**2*
     -            (3 - 2*y + 35*y**2 + 40*y**3) + 
     -           x**10*
     -            (3 - 2*y + 35*y**2 + 40*y**3) + 
     -           x**6*
     -            (998 - 796*y - 494*y**2 + 
     -              848*y**3 - 452*y**4) + 
     -           x**5*
     -            (672 - 634*y - 258*y**2 + 
     -              852*y**3 - 212*y**4) + 
     -           x**7*
     -            (672 - 634*y - 258*y**2 + 
     -              852*y**3 - 212*y**4) + 
     -           2*x**4*
     -            (74 - 207*y - 62*y**2 + 
     -              232*y**3 + 13*y**4) + 
     -           2*x**8*
     -            (74 - 207*y - 62*y**2 + 
     -              232*y**3 + 13*y**4) - 
     -           x**3*
     -            (57 + 285*y + 236*y**2 + 
     -              52*y**3 + 20*y**4) - 
     -           x**9*
     -            (57 + 285*y + 236*y**2 + 
     -              52*y**3 + 20*y**4)))/
     -       ((-1 + x)**5*x) + 
     -      (6*Li2m1oxmxpy*(1 + x)**3*(1 + y)**2*
     -         (16 + 16*x**8 + x*(51 - 75*y) + 
     -           x**7*(51 - 75*y) + 
     -           x**2*(173 - 132*y + 137*y**2) + 
     -           x**6*(173 - 132*y + 137*y**2) + 
     -           x**3*
     -            (278 - 372*y + 127*y**2 - 
     -              113*y**3) + 
     -           x**5*
     -            (278 - 372*y + 127*y**2 - 
     -              113*y**3) + 
     -           x**4*
     -            (363 - 354*y + 318*y**2 - 
     -              46*y**3 + 35*y**4)))/x - 
     -      (6*Li2my*(1 + x)**3*
     -         (1 + x + x**2 - x*y)**2*
     -         (6 + 16*y + 8*y**2 + 
     -           2*x**4*(3 + 8*y + 4*y**2) + 
     -           x*(35 + 59*y - 11*y**2 - 
     -              27*y**3) + 
     -           x**3*
     -            (35 + 59*y - 11*y**2 - 27*y**3) 
     -            + x**2*
     -            (61 + 122*y + 60*y**2 + 
     -              46*y**3 + 35*y**4)))/x - 
     -      (6*log1pxpx2mxy*logx*(1 + x)*
     -         (1 + y)**2*(1 + x + x**2 - x*y)*
     -         (-16 + 20*x**9 + 
     -           x**8*(95 - 49*y) + 
     -           x*(-67 + 41*y) + 
     -           x**2*(-173 + 43*y - 24*y**2) + 
     -           x**7*(223 - 83*y + 30*y**2) + 
     -           x**6*
     -            (242 - 54*y + 91*y**2 + 35*y**3)
     -             - x**3*
     -            (190 + 71*y**2 + 37*y**3) + 
     -           x**4*
     -            (-20 + 128*y + 169*y**2 + 
     -              105*y**3 + 36*y**4) - 
     -           x**5*
     -            (-70 + 178*y + 155*y**2 + 
     -              111*y**3 + 36*y**4)))/
     -       ((-1 + x)*x) + 
     -      (6*log1py*logx*(1 + x)*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (-8*(1 + y) + 10*x**7*(1 + y) + 
     -           x**6*(-17 + 36*y - 27*y**2) + 
     -           x*(19 - 18*y + 27*y**2) + 
     -           x**2*
     -            (106 - 41*y + 10*y**2 - 35*y**3)
     -             + x**5*
     -            (-110 + 85*y - 8*y**2 + 37*y**3)
     -             - x**4*
     -            (129 + 87*y + 203*y**2 + 
     -              105*y**3 + 36*y**4) + 
     -           x**3*
     -            (105 + 111*y + 193*y**2 + 
     -              111*y**3 + 36*y**4)))/
     -       ((-1 + x)*x) - 
     -      (3*logx**2*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (16 + 6*x**14 + x*(35 - 36*y) - 
     -           3*x**13*(5 + 26*y) + 
     -           x**2*(11 - 3*y + 6*y**2) + 
     -           x**12*(57 - 79*y + 202*y**2) + 
     -           2*x**3*
     -            (-92 - 152*y + 116*y**2 + 
     -              23*y**3) - 
     -           2*x**11*
     -            (-76 + 112*y + 140*y**2 + 
     -              121*y**3) + 
     -           x**9*
     -            (129 - 2764*y + 1044*y**2 - 
     -              1980*y**3 - 340*y**4) + 
     -           x**4*
     -            (251 - 965*y + 468*y**2 - 
     -              486*y**3 - 32*y**4) + 
     -           x**6*
     -            (462 - 4260*y + 2890*y**2 - 
     -              3130*y**3 + 64*y**4) + 
     -           x**10*
     -            (-15 + 71*y + 1328*y**2 + 
     -              666*y**3 + 112*y**4) + 
     -           4*x**7*
     -            (344 - 1170*y + 1426*y**2 - 
     -              753*y**3 + 226*y**4) + 
     -           x**5*
     -            (1035 - 810*y + 3284*y**2 - 
     -              252*y**3 + 236*y**4) + 
     -           2*x**8*
     -            (934 - 1574*y + 2929*y**2 - 
     -              989*y**3 + 392*y**4)))/
     -       ((-1 + x)**5*x) + 
     -      (12*log1px*logx*(1 + x)*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-13*(1 + y) + 14*x**9*(1 + y) + 
     -           x**8*(51 - 22*y - 69*y**2) + 
     -           x*(-39 + 23*y + 66*y**2) + 
     -           x**2*
     -            (-118 + 32*y + 45*y**2 - 
     -              125*y**3) + 
     -           x**7*
     -            (143 - 58*y - 54*y**2 + 
     -              127*y**3) + 
     -           x**6*
     -            (240 - 104*y - 171*y**2 + 
     -              21*y**3 - 108*y**4) + 
     -           x**3*
     -            (-201 + 58*y + 180*y**2 - 
     -              15*y**3 + 108*y**4) + 
     -           x**5*
     -            (183 + 79*y + 168*y**2 + 
     -              248*y**3 + 72*y**4 + 36*y**5) 
     -            - x**4*
     -            (132 + 137*y + 165*y**2 + 
     -              256*y**3 + 72*y**4 + 36*y**5))
     -         )/((-1 + x)*x) + 
     -      (12*log1pxpx2mxy*(1 + x)*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (6 + 23*y + x**10*(6 + 23*y) + 
     -           x*(15 + 35*y - 98*y**2) + 
     -           x**9*(15 + 35*y - 98*y**2) + 
     -           x**2*
     -            (71 + 161*y - 148*y**2 + 
     -              174*y**3) + 
     -           x**8*
     -            (71 + 161*y - 148*y**2 + 
     -              174*y**3) + 
     -           x**3*
     -            (105 + 135*y - 547*y**2 + 
     -              189*y**3 - 164*y**4) + 
     -           x**7*
     -            (105 + 135*y - 547*y**2 + 
     -              189*y**3 - 164*y**4) + 
     -           x**4*
     -            (175 + 275*y - 552*y**2 + 
     -              636*y**3 - 104*y**4 + 83*y**5)
     -             + x**6*
     -            (175 + 275*y - 552*y**2 + 
     -              636*y**3 - 104*y**4 + 83*y**5)
     -             + x**5*
     -            (192 + 218*y - 848*y**2 + 
     -              450*y**3 - 348*y**4 + 
     -              22*y**5 - 18*y**6)))/
     -       (1 + x**2 - x*y)**2 - 
     -      (12*log1py*(1 + x)*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (y*(2 + 15*y + 12*y**2) + 
     -           x**6*y*(2 + 15*y + 12*y**2) + 
     -           x*(2 + 5*y + 67*y**2 + 7*y**3 - 
     -              19*y**4) + 
     -           x**5*
     -            (2 + 5*y + 67*y**2 + 7*y**3 - 
     -              19*y**4) + 
     -           x**2*
     -            (10 - y + 153*y**2 + 2*y**3 + 
     -              6*y**4 + 25*y**5) + 
     -           x**4*
     -            (10 - y + 153*y**2 + 2*y**3 + 
     -              6*y**4 + 25*y**5) - 
     -           2*x**3*
     -            (-8 + 4*y - 92*y**2 + 29*y**3 + 
     -              29*y**4 + 11*y**5 + 9*y**6)))/
     -       (x*y**2) + 
     -      (12*logx*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (8 + 10*x**17 + x**16*(4 - 68*y) + 
     -           x*(2 - 59*y) + 
     -           x**2*(17 - 41*y + 146*y**2) + 
     -           x**15*(-2 - 53*y + 158*y**2) + 
     -           x**14*
     -            (49 - 220*y + 191*y**2 - 
     -              174*y**3) - 
     -           x**3*
     -            (53 + 335*y - 156*y**2 + 
     -              174*y**3) + 
     -           2*x**13*
     -            (60 - 380*y + 605*y**2 - 
     -              185*y**3 + 52*y**4) + 
     -           x**4*
     -            (345 - 216*y + 1476*y**2 - 
     -              305*y**3 + 116*y**4) + 
     -           x**5*
     -            (268 - 2825*y + 2108*y**2 - 
     -              3066*y**3 + 336*y**4 - 47*y**5
     -              ) + 
     -           x**12*
     -            (685 - 1647*y + 3205*y**2 - 
     -              2754*y**3 + 409*y**4 - 38*y**5
     -              ) + 
     -           x**11*
     -            (687 - 5098*y + 6472*y**2 - 
     -              5944*y**3 + 3134*y**4 - 
     -              231*y**5 + 8*y**6) + 
     -           x**6*
     -            (1351 - 3159*y + 8774*y**2 - 
     -              4895*y**3 + 3345*y**4 - 
     -              188*y**5 + 10*y**6) + 
     -           x**7*
     -            (1184 - 8174*y + 10146*y**2 - 
     -              12806*y**3 + 4918*y**4 - 
     -              1825*y**5 + 40*y**6) + 
     -           x**10*
     -            (1999 - 5312*y + 13469*y**2 - 
     -              10747*y**3 + 5407*y**4 - 
     -              1736*y**5 + 50*y**6) + 
     -           x**9*
     -            (1368 - 10088*y + 13414*y**2 - 
     -              16072*y**3 + 7988*y**4 - 
     -              2345*y**5 + 368*y**6) + 
     -           x**8*
     -            (2326 - 6873*y + 17699*y**2 - 
     -              13541*y**3 + 8803*y**4 - 
     -              2230*y**5 + 388*y**6)))/
     -       ((-1 + x)**4*x*(1 + x**2 - x*y)**2) 
     -       + ((1 + x**2 - 2*x*y)*
     -         (x*(-24 - (300 + 11*Pi**2)*y + 
     -              12*(65 + 4*Pi**2)*y**2 + 
     -              (1920 + 253*Pi**2)*y**3 + 
     -              8*(108 + 23*Pi**2)*y**4) - 
     -           x**15*
     -            (-24 + (-300 + 51*Pi**2)*y + 
     -              (780 + 74*Pi**2)*y**2 + 
     -              (1920 + 143*Pi**2)*y**3 + 
     -              2*(432 + 55*Pi**2)*y**4) - 
     -           x**2*
     -            (72 - 72*(-12 + Pi**2)*y + 
     -              (1332 - 31*Pi**2)*y**2 + 
     -              (3312 + 214*Pi**2)*y**3 + 
     -              (4500 + 561*Pi**2)*y**4 + 
     -              8*(216 + 47*Pi**2)*y**5) + 
     -           x**14*
     -            (72 + (864 - 178*Pi**2)*y + 
     -              (1332 - 25*Pi**2)*y**2 + 
     -              (3312 + 338*Pi**2)*y**3 + 
     -              (4500 + 439*Pi**2)*y**4 + 
     -              2*(864 + 121*Pi**2)*y**5) + 
     -           x**3*
     -            (48 + (2220 - 62*Pi**2)*y + 
     -              20*(261 + 14*Pi**2)*y**2 + 
     -              (6912 + 797*Pi**2)*y**3 + 
     -              228*(36 + 5*Pi**2)*y**4 + 
     -              (6264 + 1087*Pi**2)*y**5 + 
     -              8*(240 + 53*Pi**2)*y**6) - 
     -           x**13*
     -            (48 - 6*(-370 + 9*Pi**2)*y + 
     -              (5220 - 296*Pi**2)*y**2 + 
     -              (6912 - 81*Pi**2)*y**3 + 
     -              (8208 + 982*Pi**2)*y**4 + 
     -              (6264 + 1085*Pi**2)*y**5 + 
     -              2*(960 + 143*Pi**2)*y**6) + 
     -           2*Pi**2*x**8*y*
     -            (-1763 + 2249*y + 3373*y**2 - 
     -              2278*y**3 + 1964*y**4 + 
     -              2769*y**5 - 568*y**6 + 
     -              266*y**7) - 
     -           x**4*
     -            (-264 + 4*(-354 + 85*Pi**2)*y + 
     -              (6192 - 465*Pi**2)*y**2 + 
     -              2*(7104 + 181*Pi**2)*y**3 + 
     -              24*(569 + 117*Pi**2)*y**4 + 
     -              14*(792 + 197*Pi**2)*y**5 + 
     -              3*(1816 + 435*Pi**2)*y**6 + 
     -              128*(9 + 2*Pi**2)*y**7) + 
     -           x**12*
     -            (-264 + 4*(-354 + 31*Pi**2)*y + 
     -              (6192 + 781*Pi**2)*y**2 + 
     -              6*(2368 + 331*Pi**2)*y**3 + 
     -              8*(1707 + 200*Pi**2)*y**4 + 
     -              2*(5544 + 799*Pi**2)*y**5 + 
     -              (5448 + 1435*Pi**2)*y**6 + 
     -              16*(72 + 11*Pi**2)*y**7) + 
     -           x**5*
     -            (144 + (252 - 686*Pi**2)*y + 
     -              12*(95 + 142*Pi**2)*y**2 + 
     -              (11424 + 2819*Pi**2)*y**3 + 
     -              6*(3280 + 103*Pi**2)*y**4 + 
     -              (15192 + 2729*Pi**2)*y**5 + 
     -              (8496 + 3314*Pi**2)*y**6 + 
     -              8*(360 + 101*Pi**2)*y**7 + 
     -              32*(9 + 2*Pi**2)*y**8) - 
     -           x**9*
     -            (-504 + 
     -              (-2268 + 3373*Pi**2)*y + 
     -              (4476 - 2672*Pi**2)*y**2 + 
     -              (6432 - 591*Pi**2)*y**3 + 
     -              4*(1332 + 3115*Pi**2)*y**4 + 
     -              (8928 + 5276*Pi**2)*y**5 + 
     -              4*(1524 + 265*Pi**2)*y**6 + 
     -              24*(120 + 127*Pi**2)*y**7 + 
     -              64*(9 + 2*Pi**2)*y**8) - 
     -           x**11*
     -            (144 + (252 + 866*Pi**2)*y + 
     -              4*(285 + 22*Pi**2)*y**2 + 
     -              (11424 + 1145*Pi**2)*y**3 + 
     -              4*(4920 + 1601*Pi**2)*y**4 + 
     -              (15192 + 5035*Pi**2)*y**5 + 
     -              4*(2124 + 365*Pi**2)*y**6 + 
     -              40*(72 + 23*Pi**2)*y**7 + 
     -              4*(72 + 11*Pi**2)*y**8) + 
     -           x**10*
     -            (312 - 32*(-99 + 59*Pi**2)*y + 
     -              3*(588 + 1181*Pi**2)*y**2 + 
     -              (5232 + 6286*Pi**2)*y**3 + 
     -              3*(4972 + 521*Pi**2)*y**4 + 
     -              8*(1944 + 763*Pi**2)*y**5 + 
     -              6*(1616 + 991*Pi**2)*y**6 + 
     -              16*(216 + 43*Pi**2)*y**7 + 
     -              10*(72 + 23*Pi**2)*y**8) - 
     -           x**6*
     -            (312 + 2*(1584 + 883*Pi**2)*y - 
     -              3*(-588 + 493*Pi**2)*y**2 + 
     -              (5232 - 1942*Pi**2)*y**3 + 
     -              (14916 + 6349*Pi**2)*y**4 + 
     -              2*(7776 + 1601*Pi**2)*y**5 + 
     -              (9696 - 50*Pi**2)*y**6 + 
     -              16*(216 + 119*Pi**2)*y**7 + 
     -              (720 + 202*Pi**2)*y**8) + 
     -           x**7*
     -            (-504 - (2268 + 3037*Pi**2)*y + 
     -              (4476 + 2570*Pi**2)*y**2 + 
     -              (6432 + 4235*Pi**2)*y**3 + 
     -              (5328 - 6738*Pi**2)*y**4 + 
     -              4*(2232 + 79*Pi**2)*y**5 + 
     -              4*(1524 + 955*Pi**2)*y**6 - 
     -              120*(-24 + 11*Pi**2)*y**7 + 
     -              (576 + 412*Pi**2)*y**8) + 
     -           2*x**16*y*
     -            (Pi**2*(10 + 22*y + 11*y**2) + 
     -              6*(17 + 33*y + 16*y**2)) - 
     -           2*y*
     -            (6*(17 + 33*y + 16*y**2) + 
     -              Pi**2*(19 + 40*y + 20*y**2))))
     -        /((-1 + x)**5*x*y*(1 + x**2 - x*y)))
     -    )/
     -  (9d0*(1 + x)**5*(1 + y)**3*
     -    (1 + x + x**2 - x*y)**3)
      ifinite=zero
      res(2)=dcmplx(doublepole,zero)
      res(1)=dcmplx(rsinglepole,isinglepole)
      res(0)=dcmplx(rfinite,ifinite)
      return
      end


      subroutine gg2ttx_sHFmatrix_23(s,t,mt2,mu2,res)
      use Func_PSI
      implicit none
      double complex res(0:2)
      double precision doublepole,rsinglepole,isinglepole
      double precision rfinite,ifinite
      double precision s,t,mt2,mu2
      double precision x,y,xs
      double precision logtwo,log4pi,zero,one,two,four,Pi
      parameter (zero=0d0)
      parameter (one=1d0)
      parameter (two=2d0)
      parameter (four=4d0)
      parameter (logtwo=0.6931471805599453094172d0)
      parameter (log4pi=2.53102424696929079298d0)
      parameter (Pi=3.141592653589793238462643d0)
      double precision logx,log1mx,log1px,logy,log1py
      double precision log1pxpx2mxy,log1px2mxy,logMT2mu2
      double precision Li2x2,Li2mx,Li2my,Li2m1oxmxpy
      integer i
      xs=s/mt2
      x=-one+xs/two-dsqrt(-xs+xs**2/four)
      IF(x.GT.1d0.OR.x.LT.0d0)THEN
         WRITE(*,*)"Error: x>1 or x<0 !"
         STOP
      ENDIF
      y=-t/mt2
      IF(y.GT.one/x+x)THEN
         WRITE(*,*)"Error: y>1/x+x !"
         STOP
      ENDIF
      ! logs and Li2
      logx=DLOG(x)
      log1mx=DLOG(one-x)
      log1px=DLOG(one+x)
      logy=DLOG(y)
      log1py=DLOG(one+y)
      log1pxpx2mxy=DLOG(one+x+x**2-x*y)
      log1px2mxy=DLOG(one+x**2-x*y)
      logMT2mu2=DLOG(mt2/mu2)
      Li2x2=li2(x**2)
      Li2mx=li2(-x)
      Li2my=li2(-y)
      Li2m1oxmxpy=li2(-one/x-x+y)
      ! double pole
      doublepole=        (-96*(1 + x**2 - 2*x*y)*
     -    (1 + y + x**6*(1 + y) + 
     -      x*(3 + 4*y - 3*y**2) + 
     -      x**5*(3 + 4*y - 3*y**2) - 
     -      2*x**3*y*(-4 + 7*y + y**3) + 
     -      x**2*(3 + 11*y - 4*y**2 + 4*y**3) + 
     -      x**4*(3 + 11*y - 4*y**2 + 4*y**3)))/
     -  (x*(1 + x)**2*(1 + y)**2*
     -    (1 + x + x**2 - x*y)**2)
      rsinglepole=        (16*((18*log1py*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + y)**2 - 
     -      (18*log1pxpx2mxy*x**2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x + x**2 - x*y)**2 + 
     -      (18*log1px*(1 + x)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/
     -       ((1 + y)**2*(1 + x + x**2 - x*y)**2) 
     -       + (18*logMT2mu2*(1 + x)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/
     -       ((1 + y)**2*(1 + x + x**2 - x*y)**2) 
     -       - (2*logx*
     -         (-4 + 5*x**5 + x**4*(5 - 10*y) + 
     -           x*(-4 + 8*y) + 
     -           x**2*(10 + 26*y + 9*y**2) - 
     -           x**3*(8 + 28*y + 9*y**2))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/
     -       ((-1 + x)*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) + 
     -      ((1 + x)**2*(1 + x**2 - 2*x*y)*
     -         (5*(1 + y) + 5*x**6*(1 + y) + 
     -           x*(51 - 52*y + 21*y**2) + 
     -           x**5*(51 - 52*y + 21*y**2) + 
     -           x**2*
     -            (231 - 161*y + 52*y**2 - 
     -              52*y**3) + 
     -           x**4*
     -            (231 - 161*y + 52*y**2 - 
     -              52*y**3) + 
     -           2*x**3*
     -            (198 - 52*y + 109*y**2 + 
     -              13*y**4)))/
     -       ((1 + y)**2*(1 + x + x**2 - x*y)**2))
     -    )/(3d0*x*(1 + x)**4)
      isinglepole=zero
      rfinite=        (8*((-54*log1px**2*(1 + x)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + x**4 - 4*x*(-1 + y) - 
     -           4*x**3*(-1 + y) + 
     -           2*x**2*(5 + 2*y**2)))/
     -       (x*(1 + y)*(1 + x + x**2 - x*y)) + 
     -      (54*log1pxpx2mxy**2*(1 + x)**2*
     -         (2 + 2*x**4 + x*(3 - 5*y) + 
     -           x**3*(3 - 5*y) + 
     -           2*x**2*(5 + y + 2*y**2)))/
     -       (1 + x + x**2 - x*y) - 
     -      (54*log1py**2*(1 + x)**2*
     -         (1 + x**4 + x*(5 - 3*y) + 
     -           x**3*(5 - 3*y) + 
     -           x**2*(8 - 2*y + 4*y**2)))/
     -       (x*(1 + y)) - 
     -      (54*log1px*(1 + x)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (4 + 4*x**8 - x*(4 + 3*y) - 
     -           x**7*(4 + 3*y) + 
     -           x**2*(-5 - 4*y + 3*y**2) + 
     -           x**6*(-5 - 4*y + 3*y**2) + 
     -           x**3*(8 - 37*y + 4*y**2) + 
     -           x**5*(8 - 37*y + 4*y**2) + 
     -           x**4*(42 - 8*y + 34*y**2)))/
     -       ((-1 + x)**4*x*(1 + y)*
     -         (1 + x + x**2 - x*y)) - 
     -      (108*log1py*logMT2mu2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(x*(1 + y)**2) + 
     -      (108*log1pxpx2mxy*logMT2mu2*x*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x + x**2 - x*y)**2 - 
     -      (108*log1px*logMT2mu2*(1 + x)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/
     -       (x*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) - 
     -      (54*logMT2mu2**2*(1 + x)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/
     -       (x*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) + 
     -      (6*Li2x2*(1 + x)*(1 + x**2)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/
     -       ((-1 + x)*x*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) + 
     -      (12*log1mx*logx*(1 + x)*(1 + x**2)*
     -         (1 + x**2 - 2*x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/
     -       ((-1 + x)*x*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) + 
     -      (12*logMT2mu2*logx*
     -         (-4 + 5*x**5 + x**4*(5 - 10*y) + 
     -           x*(-4 + 8*y) + 
     -           x**2*(10 + 26*y + 9*y**2) - 
     -           x**3*(8 + 28*y + 9*y**2))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/
     -       ((-1 + x)*x*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) - 
     -      (24*logMT2mu2*(1 + x)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (7*(1 + y) + 7*x**6*(1 + y) + 
     -           x*(30 + 10*y - 12*y**2) + 
     -           x**5*(30 + 10*y - 12*y**2) + 
     -           x**2*
     -            (75 + 23*y - 10*y**2 + 10*y**3) 
     -            + x**4*
     -            (75 + 23*y - 10*y**2 + 10*y**3) 
     -            + x**3*
     -            (99 + 20*y - 26*y**2 - 5*y**4)))
     -        /(x*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) - 
     -      (108*log1px*log1py*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(-1 + 4*y - 3*y**2) + 
     -           x**5*(-1 + 4*y - 3*y**2) + 
     -           x**2*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            + x**4*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            - 2*x**3*
     -            (13 + 13*y**2 + 4*y**3 + 2*y**4)
     -           ))/(x*(1 + y)**2) - 
     -      (108*log1px*log1pxpx2mxy*
     -         (2 + 2*x**8 + x*(7 - 9*y) + 
     -           x**7*(7 - 9*y) + 
     -           x**2*(21 - 28*y + 15*y**2) + 
     -           x**6*(21 - 28*y + 15*y**2) + 
     -           x**3*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**5*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**4*
     -            (62 - 64*y + 50*y**2 - 8*y**3 + 
     -              4*y**4)))/
     -       (1 + x + x**2 - x*y)**2 + 
     -      (6*Li2m1oxmxpy*(1 + x)**2*
     -         (16 + 16*x**8 + x*(51 - 75*y) + 
     -           x**7*(51 - 75*y) + 
     -           x**2*(173 - 132*y + 137*y**2) + 
     -           x**6*(173 - 132*y + 137*y**2) + 
     -           x**3*
     -            (278 - 372*y + 127*y**2 - 
     -              113*y**3) + 
     -           x**5*
     -            (278 - 372*y + 127*y**2 - 
     -              113*y**3) + 
     -           x**4*
     -            (363 - 354*y + 318*y**2 - 
     -              46*y**3 + 35*y**4)))/
     -       (1 + x + x**2 - x*y)**3 - 
     -      (6*Li2my*(1 + x)**2*
     -         (6 + 16*y + 8*y**2 + 
     -           2*x**4*(3 + 8*y + 4*y**2) + 
     -           x*(35 + 59*y - 11*y**2 - 
     -              27*y**3) + 
     -           x**3*
     -            (35 + 59*y - 11*y**2 - 27*y**3) 
     -            + x**2*
     -            (61 + 122*y + 60*y**2 + 
     -              46*y**3 + 35*y**4)))/
     -       (x*(1 + y)**3) - 
     -      (6*log1pxpx2mxy*logx*
     -         (-16 + 20*x**9 + 
     -           x**8*(95 - 49*y) + 
     -           x*(-67 + 41*y) + 
     -           x**2*(-173 + 43*y - 24*y**2) + 
     -           x**7*(223 - 83*y + 30*y**2) + 
     -           x**6*
     -            (242 - 54*y + 91*y**2 + 35*y**3)
     -             - x**3*
     -            (190 + 71*y**2 + 37*y**3) + 
     -           x**4*
     -            (-20 + 128*y + 169*y**2 + 
     -              105*y**3 + 36*y**4) - 
     -           x**5*
     -            (-70 + 178*y + 155*y**2 + 
     -              111*y**3 + 36*y**4)))/
     -       ((-1 + x)*(1 + x + x**2 - x*y)**2) + 
     -      (6*log1py*logx*
     -         (-8*(1 + y) + 10*x**7*(1 + y) + 
     -           x**6*(-17 + 36*y - 27*y**2) + 
     -           x*(19 - 18*y + 27*y**2) + 
     -           x**2*
     -            (106 - 41*y + 10*y**2 - 35*y**3)
     -             + x**5*
     -            (-110 + 85*y - 8*y**2 + 37*y**3)
     -             - x**4*
     -            (129 + 87*y + 203*y**2 + 
     -              105*y**3 + 36*y**4) + 
     -           x**3*
     -            (105 + 111*y + 193*y**2 + 
     -              111*y**3 + 36*y**4)))/
     -       ((-1 + x)*x*(1 + y)**2) - 
     -      (6*Li2mx*(1 + x)*(1 + x**2 - 2*x*y)*
     -         (12*(1 + y) + 12*x**12*(1 + y) + 
     -           x*(39 + 38*y - 17*y**2) + 
     -           x**11*(39 + 38*y - 17*y**2) + 
     -           2*x**2*
     -            (-32 - 92*y - 55*y**2 + 5*y**3) 
     -            + 2*x**10*
     -            (-32 - 92*y - 55*y**2 + 5*y**3) 
     -            + x**5*
     -            (673 - 392*y + 170*y**2 + 
     -              1168*y**3 - 99*y**4) + 
     -           x**7*
     -            (673 - 392*y + 170*y**2 + 
     -              1168*y**3 - 99*y**4) + 
     -           x**3*
     -            (48 - 62*y + 87*y**2 + 
     -              144*y**3 - 5*y**4) + 
     -           x**9*
     -            (48 - 62*y + 87*y**2 + 
     -              144*y**3 - 5*y**4) - 
     -           4*x**4*
     -            (-42 + 167*y + 139*y**2 - 
     -              52*y**3 + 18*y**4) - 
     -           4*x**8*
     -            (-42 + 167*y + 139*y**2 - 
     -              52*y**3 + 18*y**4) - 
     -           4*x**6*
     -            (-210 + 236*y + 219*y**2 - 
     -              99*y**3 + 128*y**4)))/
     -       ((-1 + x)**5*x*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) - 
     -      (3*logx**2*
     -         (16 + 10*x**14 + 
     -           x**13*(33 - 54*y) + 13*y + 
     -           x*(26 - 70*y - 24*y**2) + 
     -           x**12*(-45 - 181*y + 72*y**2) + 
     -           x**2*
     -            (25 - 162*y + 227*y**2 - 
     -              29*y**3) + 
     -           x**11*
     -            (66 + 51*y + 196*y**2 + 2*y**3) 
     -            - x**10*
     -            (-140 + 321*y + 34*y**2 + 
     -              494*y**3 + 102*y**4) + 
     -           x**3*
     -            (23 - 764*y + 771*y**2 + 
     -              105*y**3 + 112*y**4) - 
     -           x**4*
     -            (-522 + 1632*y - 429*y**2 + 
     -              2011*y**3 + 604*y**4 + 72*y**5
     -              ) + 
     -           x**9*
     -            (237 - 815*y + 3253*y**2 + 
     -              1009*y**3 + 758*y**4 + 72*y**5
     -              ) - 
     -           x**8*
     -            (-619 + 4972*y + 417*y**2 + 
     -              5769*y**3 + 1736*y**4 + 
     -              360*y**5) + 
     -           x**5*
     -            (1104 - 497*y + 6783*y**2 + 
     -              1875*y**3 + 2078*y**4 + 
     -              360*y**5) - 
     -           x**6*
     -            (-153 + 7145*y + 1429*y**2 + 
     -              8401*y**3 + 2454*y**4 + 
     -              720*y**5) + 
     -           x**7*
     -            (2255 - 731*y + 10909*y**2 + 
     -              3345*y**3 + 3676*y**4 + 
     -              720*y**5)))/
     -       ((-1 + x)**5*(1 + y)*
     -         (1 + x + x**2 - x*y)**2) + 
     -      (12*log1pxpx2mxy*x*
     -         (6 + 23*y + x**10*(6 + 23*y) + 
     -           x*(15 + 35*y - 98*y**2) + 
     -           x**9*(15 + 35*y - 98*y**2) + 
     -           x**2*
     -            (71 + 161*y - 148*y**2 + 
     -              174*y**3) + 
     -           x**8*
     -            (71 + 161*y - 148*y**2 + 
     -              174*y**3) + 
     -           x**3*
     -            (105 + 135*y - 547*y**2 + 
     -              189*y**3 - 164*y**4) + 
     -           x**7*
     -            (105 + 135*y - 547*y**2 + 
     -              189*y**3 - 164*y**4) + 
     -           x**4*
     -            (175 + 275*y - 552*y**2 + 
     -              636*y**3 - 104*y**4 + 83*y**5)
     -             + x**6*
     -            (175 + 275*y - 552*y**2 + 
     -              636*y**3 - 104*y**4 + 83*y**5)
     -             + x**5*
     -            (192 + 218*y - 848*y**2 + 
     -              450*y**3 - 348*y**4 + 
     -              22*y**5 - 18*y**6)))/
     -       ((1 + x**2 - x*y)**2*
     -         (1 + x + x**2 - x*y)**2) - 
     -      (12*log1py*
     -         (y*(2 + 15*y + 12*y**2) + 
     -           x**6*y*(2 + 15*y + 12*y**2) + 
     -           x*(2 + 5*y + 67*y**2 + 7*y**3 - 
     -              19*y**4) + 
     -           x**5*
     -            (2 + 5*y + 67*y**2 + 7*y**3 - 
     -              19*y**4) + 
     -           x**2*
     -            (10 - y + 153*y**2 + 2*y**3 + 
     -              6*y**4 + 25*y**5) + 
     -           x**4*
     -            (10 - y + 153*y**2 + 2*y**3 + 
     -              6*y**4 + 25*y**5) - 
     -           2*x**3*
     -            (-8 + 4*y - 92*y**2 + 29*y**3 + 
     -              29*y**4 + 11*y**5 + 9*y**6)))/
     -       (x*y**2*(1 + y)**2) + 
     -      (6*log1px*logx*
     -         (-10*(1 + y) + 8*x**11*(1 + y) + 
     -           x**10*(89 + 58*y - 23*y**2) + 
     -           x*(-91 - 68*y + 31*y**2) + 
     -           x**2*
     -            (-259 + 12*y + 321*y**2 - 
     -              6*y**3) - 
     -           x**9*
     -            (-281 + 42*y + 273*y**2 + 
     -              6*y**3) + 
     -           x**3*
     -            (-513 + 62*y + 450*y**2 - 
     -              386*y**3 - 85*y**4) + 
     -           x**8*
     -            (585 - 172*y - 342*y**2 + 
     -              334*y**3 + 95*y**4) + 
     -           x**4*
     -            (-655 + 4*y + 766*y**2 + 
     -              22*y**3 + 393*y**4 + 142*y**5)
     -             - x**7*
     -            (-785 + 248*y + 602*y**2 + 
     -              122*y**3 + 363*y**4 + 146*y**5
     -              ) + 
     -           2*x**6*
     -            (261 + 90*y + 315*y**2 + 
     -              473*y**3 + 316*y**4 + 
     -              141*y**5 + 36*y**6) - 
     -           2*x**5*
     -            (171 + 252*y + 207*y**2 + 
     -              535*y**3 + 296*y**4 + 
     -              147*y**5 + 36*y**6)))/
     -       ((-1 + x)*x*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2) + 
     -      (6*logx*(16 + 20*x**18 + 
     -           x**17*(40 - 113*y) + 
     -           x*(32 - 94*y) + 
     -           x**2*(42 - 261*y + 182*y**2) + 
     -           x**16*(33 - 296*y + 212*y**2) + 
     -           x**15*
     -            (120 - 287*y + 925*y**2 - 
     -              126*y**3) + 
     -           x**3*
     -            (33 - 358*y + 874*y**2 - 
     -              112*y**3) + 
     -           x**14*
     -            (59 - 1560*y + 920*y**2 - 
     -              1763*y**3 - 100*y**4) + 
     -           x**4*
     -            (176 - 1145*y + 1095*y**2 - 
     -              1736*y**3 - 92*y**4) + 
     -           x**5*
     -            (759 - 2062*y + 5814*y**2 - 
     -              1669*y**3 + 2192*y**4 + 
     -              202*y**5) + 
     -           x**13*
     -            (935 - 1448*y + 6553*y**2 - 
     -              1502*y**3 + 2193*y**4 + 
     -              211*y**5) + 
     -           x**12*
     -            (1062 - 7871*y + 6466*y**2 - 
     -              13025*y**3 + 933*y**4 - 
     -              1701*y**5 - 140*y**6) + 
     -           x**6*
     -            (1319 - 7204*y + 7599*y**2 - 
     -              12430*y**3 + 975*y**4 - 
     -              1703*y**5 - 138*y**6) + 
     -           x**11*
     -            (2889 - 8652*y + 23717*y**2 - 
     -              10529*y**3 + 13609*y**4 + 
     -              409*y**5 + 746*y**6 + 36*y**7)
     -             + x**7*
     -            (2766 - 9591*y + 22852*y**2 - 
     -              11389*y**3 + 13419*y**4 + 
     -              427*y**5 + 746*y**6 + 36*y**7)
     -             - x**10*
     -            (-3168 + 16895*y - 21827*y**2 + 
     -              33379*y**3 - 6233*y**4 + 
     -              7517*y**5 + 722*y**6 + 
     -              144*y**7) - 
     -           x**8*
     -            (-3321 + 16608*y - 22755*y**2 + 
     -              32995*y**3 - 6451*y**4 + 
     -              7511*y**5 + 728*y**6 + 
     -              144*y**7) + 
     -           x**9*
     -            (3946 - 15411*y + 35457*y**2 - 
     -              21041*y**3 + 23307*y**4 - 
     -              97*y**5 + 1964*y**6 + 216*y**7
     -              )))/
     -       ((-1 + x)**4*x*(1 + y)*
     -         (1 + x**2 - x*y)**2*
     -         (1 + x + x**2 - x*y)**2) + 
     -      ((1 + x)*(1 + x**2 - 2*x*y)*
     -         (-(x**15*
     -              (-24 + 41*(-6 + Pi**2)*y + 
     -                (858 + 56*Pi**2)*y**2 + 
     -                3*(638 + 45*Pi**2)*y**3 + 
     -                2*(417 + 55*Pi**2)*y**4)) + 
     -           x*(-24 - 2*(123 + 5*Pi**2)*y + 
     -              (858 - 31*Pi**2)*y**2 + 
     -              6*(319 + 15*Pi**2)*y**3 + 
     -              (834 + 101*Pi**2)*y**4) - 
     -           2*x**2*
     -            (24 - 9*(-37 + 6*Pi**2)*y + 
     -              (663 - 97*Pi**2)*y**2 + 
     -              (1839 - 93*Pi**2)*y**3 + 
     -              (2289 + 50*Pi**2)*y**4 + 
     -              (804 + 94*Pi**2)*y**5) + 
     -           x**14*
     -            (48 - 9*(-74 + 13*Pi**2)*y + 
     -              (1326 + 59*Pi**2)*y**2 + 
     -              (3678 + 329*Pi**2)*y**3 + 
     -              (4578 + 407*Pi**2)*y**4 + 
     -              2*(804 + 121*Pi**2)*y**5) + 
     -           x**3*
     -            (72 - 3*(-676 + 35*Pi**2)*y + 
     -              (4362 - 63*Pi**2)*y**2 + 
     -              (6594 - 131*Pi**2)*y**3 + 
     -              (9078 - 87*Pi**2)*y**4 + 
     -              (6630 + 262*Pi**2)*y**5 + 
     -              6*(290 + 33*Pi**2)*y**6) - 
     -           x**13*
     -            (72 + (2028 - 11*Pi**2)*y + 
     -              (4362 + 38*Pi**2)*y**2 + 
     -              (6594 + 404*Pi**2)*y**3 + 
     -              2*(4539 + 560*Pi**2)*y**4 + 
     -              3*(2210 + 343*Pi**2)*y**5 + 
     -              2*(870 + 143*Pi**2)*y**6) + 
     -           Pi**2*x**8*y*
     -            (-1571 + 2849*y + 5306*y**2 + 
     -              1268*y**3 + 5217*y**4 + 
     -              4663*y**5 + 164*y**6 + 
     -              336*y**7) + 
     -           x**12*
     -            (-144 + 2*(-609 + 94*Pi**2)*y + 
     -              (5370 + 784*Pi**2)*y**2 + 
     -              (12348 + 2269*Pi**2)*y**3 + 
     -              (13404 + 2381*Pi**2)*y**4 + 
     -              (12486 + 1979*Pi**2)*y**5 + 
     -              (6018 + 1379*Pi**2)*y**6 + 
     -              8*(129 + 22*Pi**2)*y**7) - 
     -           x**4*
     -            (-144 + 7*(-174 + 41*Pi**2)*y + 
     -              (5370 - 495*Pi**2)*y**2 + 
     -              (12348 - 347*Pi**2)*y**3 + 
     -              3*(4468 + 227*Pi**2)*y**4 + 
     -              6*(2081 + 102*Pi**2)*y**5 + 
     -              6*(1003 + 69*Pi**2)*y**6 + 
     -              4*(258 + 29*Pi**2)*y**7) + 
     -           x**7*
     -            (-288 - 15*(142 + 97*Pi**2)*y + 
     -              (3984 + 555*Pi**2)*y**2 + 
     -              (5154 + 923*Pi**2)*y**3 + 
     -              (4296 - 5324*Pi**2)*y**4 - 
     -              84*(-109 + 26*Pi**2)*y**5 + 
     -              (6594 + 697*Pi**2)*y**6 - 
     -              8*(-408 + 133*Pi**2)*y**7 + 
     -              6*(143 + 27*Pi**2)*y**8) + 
     -           x**5*
     -            (96 + (144 - 397*Pi**2)*y + 
     -              (888 + 884*Pi**2)*y**2 + 
     -              (9834 + 980*Pi**2)*y**3 - 
     -              9*(-1972 + 73*Pi**2)*y**4 + 
     -              9*(1754 + 59*Pi**2)*y**5 + 
     -              2*(5019 + 584*Pi**2)*y**6 + 
     -              8*(408 + 35*Pi**2)*y**7 + 
     -              (258 + 29*Pi**2)*y**8) + 
     -           x**10*
     -            (240 + (2982 - 889*Pi**2)*y + 
     -              (930 + 2899*Pi**2)*y**2 + 
     -              18*(223 + 317*Pi**2)*y**3 + 
     -              2*(6921 + 2363*Pi**2)*y**4 + 
     -              3*(5012 + 2315*Pi**2)*y**5 + 
     -              3*(3556 + 1665*Pi**2)*y**6 + 
     -              (4464 + 988*Pi**2)*y**7 + 
     -              6*(136 + 37*Pi**2)*y**8) - 
     -           x**11*
     -            (96 + 3*(48 + 205*Pi**2)*y + 
     -              (888 + 890*Pi**2)*y**2 + 
     -              3*(3278 + 843*Pi**2)*y**3 + 
     -              3*(5916 + 2095*Pi**2)*y**4 + 
     -              18*(877 + 283*Pi**2)*y**5 + 
     -              (10038 + 1937*Pi**2)*y**6 + 
     -              24*(136 + 37*Pi**2)*y**7 + 
     -              (258 + 44*Pi**2)*y**8) - 
     -           x**6*
     -            (240 + 6*(497 + 129*Pi**2)*y + 
     -              (930 - 796*Pi**2)*y**2 + 
     -              (4014 - 1699*Pi**2)*y**3 + 
     -              (13842 + 1897*Pi**2)*y**4 + 
     -              (15036 + 415*Pi**2)*y**5 + 
     -              (10668 - 825*Pi**2)*y**6 + 
     -              (4464 + 764*Pi**2)*y**7 + 
     -              (816 + 70*Pi**2)*y**8) - 
     -           x**9*
     -            (-288 + 
     -              10*(-213 + 182*Pi**2)*y + 
     -              (3984 - 639*Pi**2)*y**2 + 
     -              6*(859 + 423*Pi**2)*y**3 + 
     -              2*(2148 + 5167*Pi**2)*y**4 + 
     -              (9156 + 6518*Pi**2)*y**5 + 
     -              14*(471 + 220*Pi**2)*y**6 + 
     -              24*(136 + 93*Pi**2)*y**7 + 
     -              (858 + 203*Pi**2)*y**8) + 
     -           2*x**16*y*
     -            (Pi**2*(10 + 22*y + 11*y**2) + 
     -              6*(17 + 33*y + 16*y**2)) - 
     -           2*y*
     -            (Pi**2*(11 + 24*y + 12*y**2) + 
     -              6*(17 + 33*y + 16*y**2))))/
     -       ((-1 + x)**5*x*y*(1 + y)**3*
     -         (1 + x**2 - x*y)*
     -         (1 + x + x**2 - x*y)**3)))/
     -  (9d0*(1 + x)**4)
      ifinite=        (16*Pi*((log1mx*(-1 + x**2)**3*
     -         (1 + x**2 - 2*x*y)*
     -         (2 + 2*x**4 - x*(-7 + y) - 
     -           x**3*(-7 + y) + x**2*(-5 + y**2))
     -         )/x - 
     -      (2*log1px*(-1 + x)**3*(1 + x)**2*
     -         (1 + x**2 - 2*x*y)*
     -         (-11 + 7*x**5 - 17*x**4*y + 
     -           x*(-18 + 19*y) + 
     -           x**3*(16 + 19*y + 17*y**2) - 
     -           x**2*(20 + 17*y + 19*y**2)))/x + 
     -      (1 + x)*(1 + x**2 - 2*x*y)*
     -       (22*y + 23*x**7*y - 
     -         x*(10 + 63*y + 22*y**2) - 
     -         x**6*(35 + 72*y + 23*y**2) + 
     -         x**2*(3 - 160*y + 63*y**2) + 
     -         x**5*(132 - 137*y + 72*y**2) + 
     -         2*x**4*(20 - 127*y + 80*y**2) + 
     -         x**3*(302 - 223*y + 182*y**2)) + 
     -      (log1pxpx2mxy*(-1 + x)**3*
     -         (-20 + 16*x**9 + 
     -           x**8*(31 - 77*y) + 
     -           x*(-59 + 85*y) + 
     -           x**2*(-151 + 191*y - 138*y**2) + 
     -           x**7*(101 - 151*y + 132*y**2) + 
     -           x**6*
     -            (190 - 252*y + 107*y**2 - 
     -              107*y**3) + 
     -           x**3*
     -            (-242 + 306*y - 127*y**2 + 
     -              109*y**3) - 
     -           x**4*
     -            (178 - 70*y + 205*y**2 + 
     -              33*y**3 + 36*y**4) + 
     -           x**5*
     -            (128 - 20*y + 191*y**2 + 
     -              39*y**3 + 36*y**4)))/x - 
     -      (logx*(-1 + x)**3*
     -         (-9 + 7*x**9 + x**8*(5 - 41*y) + 
     -           4*x*(-5 + 11*y) + 
     -           x**2*(-69 + 93*y - 81*y**2) + 
     -           x**7*(43 - 82*y + 78*y**2) + 
     -           x**6*
     -            (134 - 138*y + 56*y**2 - 
     -              71*y**3) + 
     -           x**3*
     -            (-158 + 143*y - 67*y**2 + 
     -              71*y**3) + 
     -           x**5*
     -            (124 + 55*y + 197*y**2 + 
     -              73*y**3 + 36*y**4) - 
     -           x**4*
     -            (137 + 42*y + 199*y**2 + 
     -              73*y**3 + 36*y**4)))/x + 
     -      log1py*(-1 + x)**3*
     -       (-8*(1 + y) + 10*x**7*(1 + y) + 
     -         x**6*(-17 + 36*y - 27*y**2) + 
     -         x*(19 - 18*y + 27*y**2) + 
     -         x**2*(106 - 41*y + 10*y**2 - 
     -            35*y**3) + 
     -         x**5*(-110 + 85*y - 8*y**2 + 
     -            37*y**3) - 
     -         x**4*(129 + 87*y + 203*y**2 + 
     -            105*y**3 + 36*y**4) + 
     -         x**3*(105 + 111*y + 193*y**2 + 
     -            111*y**3 + 36*y**4))))/
     -  (3d0*(-1 + x**2)**4*(1 + y)*
     -    (1 + x + x**2 - x*y))
      res(2)=dcmplx(doublepole,zero)
      res(1)=dcmplx(rsinglepole,isinglepole)
      res(0)=dcmplx(rfinite,ifinite)
      return
      end


      subroutine gg2ttx_sHFmatrix_33(s,t,mt2,mu2,res)
      use Func_PSI
      implicit none
      double complex res(0:2)
      double precision doublepole,rsinglepole,isinglepole
      double precision rfinite,ifinite
      double precision s,t,mt2,mu2
      double precision x,y,xs
      double precision logtwo,log4pi,zero,one,two,four,Pi
      parameter (zero=0d0)
      parameter (one=1d0)
      parameter (two=2d0)
      parameter (four=4d0)
      parameter (logtwo=0.6931471805599453094172d0)
      parameter (log4pi=2.53102424696929079298d0)
      parameter (Pi=3.141592653589793238462643d0)
      double precision logx,log1mx,log1px,logy,log1py
      double precision log1pxpx2mxy,log1px2mxy,logMT2mu2
      double precision Li2x2,Li2mx,Li2my,Li2m1oxmxpy
      integer i
      xs=s/mt2
      x=-one+xs/two-dsqrt(-xs+xs**2/four)
      IF(x.GT.1d0.OR.x.LT.0d0)THEN
         WRITE(*,*)"Error: x>1 or x<0 !"
         STOP
      ENDIF
      y=-t/mt2
      IF(y.GT.one/x+x)THEN
         WRITE(*,*)"Error: y>1/x+x !"
         STOP
      ENDIF
      ! logs and Li2
      logx=DLOG(x)
      log1mx=DLOG(one-x)
      log1px=DLOG(one+x)
      logy=DLOG(y)
      log1py=DLOG(one+y)
      log1pxpx2mxy=DLOG(one+x+x**2-x*y)
      log1px2mxy=DLOG(one+x**2-x*y)
      logMT2mu2=DLOG(mt2/mu2)
      Li2x2=li2(x**2)
      Li2mx=li2(-x)
      Li2my=li2(-y)
      Li2m1oxmxpy=li2(-one/x-x+y)
      ! double pole
      doublepole=        (-96*(1 + y + x**6*(1 + y) + 
     -      x*(3 + 4*y - 3*y**2) + 
     -      x**5*(3 + 4*y - 3*y**2) - 
     -      2*x**3*y*(-4 + 7*y + y**3) + 
     -      x**2*(3 + 11*y - 4*y**2 + 4*y**3) + 
     -      x**4*(3 + 11*y - 4*y**2 + 4*y**3)))/
     -  (x*(1 + y)**2*(1 + x + x**2 - x*y)**2)
      rsinglepole=        (16*((18*log1px*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x + 
     -      (18*logMT2mu2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x + 
     -      (18*log1pxpx2mxy*(1 + y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 + 
     -      (18*log1py*(1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(x*(1 + x)**2) - 
     -      (2*logx*(-4 + 5*x**3 - x*(13 + 9*y) + 
     -           x**2*(14 + 9*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*x*(1 + x)**2) + 
     -      (5*(1 + y) + 5*x**6*(1 + y) + 
     -         x*(51 - 52*y + 21*y**2) + 
     -         x**5*(51 - 52*y + 21*y**2) + 
     -         x**2*(231 - 161*y + 52*y**2 - 
     -            52*y**3) + 
     -         x**4*(231 - 161*y + 52*y**2 - 
     -            52*y**3) + 
     -         2*x**3*
     -          (198 - 52*y + 109*y**2 + 13*y**4))
     -        /x))/
     -  (3d0*(1 + y)**2*(1 + x + x**2 - x*y)**2)
      isinglepole=zero
      rfinite=        (8*((-216*log1px*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + x + x**6 + x**5*(1 - 2*y) - 
     -           2*x*y - 2*x**3*(1 + 2*y) + 
     -           x**2*(1 + 2*y**2) + 
     -           x**4*(1 + 2*y**2)))/
     -       ((-1 + x)**2*x) - 
     -      (54*log1pxpx2mxy**2*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2*
     -         (2 + 2*x**4 + x*(3 - 5*y) + 
     -           x**3*(3 - 5*y) + 
     -           2*x**2*(5 + y + 2*y**2)))/x - 
     -      (54*log1px**2*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2*
     -         (3 + 3*x**4 - 8*x*(-1 + y) - 
     -           8*x**3*(-1 + y) + 
     -           2*x**2*(9 + 4*y**2)))/x - 
     -      (54*log1py**2*(1 + y)**2*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + x**4 + x*(5 - 3*y) + 
     -           x**3*(5 - 3*y) + 
     -           x**2*(8 - 2*y + 4*y**2)))/x - 
     -      (108*log1px*logMT2mu2*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x - 
     -      (54*logMT2mu2**2*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/x + 
     -      (6*Li2x2*(1 + x**2)*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(x*(-1 + x**2)) + 
     -      (12*log1mx*logx*(1 + x**2)*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(x*(-1 + x**2)) - 
     -      (108*log1pxpx2mxy*logMT2mu2*
     -         (1 + y)**2*(1 + x + x**2 - x*y)*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(1 + x)**2 - 
     -      (108*log1py*logMT2mu2*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/(x*(1 + x)**2) + 
     -      (12*logMT2mu2*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-4 + 5*x**3 - x*(13 + 9*y) + 
     -           x**2*(14 + 9*y))*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(3 + 4*y - 3*y**2) + 
     -           x**5*(3 + 4*y - 3*y**2) - 
     -           2*x**3*y*(-4 + 7*y + y**3) + 
     -           x**2*
     -            (3 + 11*y - 4*y**2 + 4*y**3) + 
     -           x**4*(3 + 11*y - 4*y**2 + 4*y**3)
     -           ))/((-1 + x)*x*(1 + x)**2) - 
     -      (24*logMT2mu2*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (7*(1 + y) + 7*x**6*(1 + y) + 
     -           x*(30 + 10*y - 12*y**2) + 
     -           x**5*(30 + 10*y - 12*y**2) + 
     -           x**2*
     -            (75 + 23*y - 10*y**2 + 10*y**3) 
     -            + x**4*
     -            (75 + 23*y - 10*y**2 + 10*y**3) 
     -            + x**3*
     -            (99 + 20*y - 26*y**2 - 5*y**4)))
     -        /x - (108*log1px*log1py*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (1 + y + x**6*(1 + y) + 
     -           x*(-1 + 4*y - 3*y**2) + 
     -           x**5*(-1 + 4*y - 3*y**2) + 
     -           x**2*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            + x**4*
     -            (-13 + 11*y - 4*y**2 + 4*y**3) 
     -            - 2*x**3*
     -            (13 + 13*y**2 + 4*y**3 + 2*y**4)
     -           ))/(x*(1 + x)**2) + 
     -      (108*log1px*log1pxpx2mxy*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (2 + 2*x**8 + x*(7 - 9*y) + 
     -           x**7*(7 - 9*y) + 
     -           x**2*(21 - 28*y + 15*y**2) + 
     -           x**6*(21 - 28*y + 15*y**2) + 
     -           x**3*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**5*
     -            (45 - 59*y + 28*y**2 - 12*y**3) 
     -            + x**4*
     -            (62 - 64*y + 50*y**2 - 8*y**3 + 
     -              4*y**4)))/(x*(1 + x)**2) - 
     -      (6*Li2m1oxmxpy*(1 + y)**2*
     -         (16 + 16*x**8 + x*(51 - 75*y) + 
     -           x**7*(51 - 75*y) + 
     -           x**2*(173 - 132*y + 137*y**2) + 
     -           x**6*(173 - 132*y + 137*y**2) + 
     -           x**3*
     -            (278 - 372*y + 127*y**2 - 
     -              113*y**3) + 
     -           x**5*
     -            (278 - 372*y + 127*y**2 - 
     -              113*y**3) + 
     -           x**4*
     -            (363 - 354*y + 318*y**2 - 
     -              46*y**3 + 35*y**4)))/x - 
     -      (6*Li2my*(1 + x + x**2 - x*y)**2*
     -         (6 + 16*y + 8*y**2 + 
     -           2*x**4*(3 + 8*y + 4*y**2) + 
     -           x*(35 + 59*y - 11*y**2 - 
     -              27*y**3) + 
     -           x**3*
     -            (35 + 59*y - 11*y**2 - 27*y**3) 
     -            + x**2*
     -            (61 + 122*y + 60*y**2 + 
     -              46*y**3 + 35*y**4)))/x + 
     -      (6*log1pxpx2mxy*logx*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (-16 + 20*x**9 + 
     -           x**8*(95 - 49*y) + 
     -           x*(-67 + 41*y) + 
     -           x**2*(-173 + 43*y - 24*y**2) + 
     -           x**7*(223 - 83*y + 30*y**2) + 
     -           x**6*
     -            (242 - 54*y + 91*y**2 + 35*y**3)
     -             - x**3*
     -            (190 + 71*y**2 + 37*y**3) + 
     -           x**4*
     -            (-20 + 128*y + 169*y**2 + 
     -              105*y**3 + 36*y**4) - 
     -           x**5*
     -            (-70 + 178*y + 155*y**2 + 
     -              111*y**3 + 36*y**4)))/
     -       ((-1 + x)*x*(1 + x)**2) + 
     -      (6*log1py*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (-8*(1 + y) + 10*x**7*(1 + y) + 
     -           x**6*(-17 + 36*y - 27*y**2) + 
     -           x*(19 - 18*y + 27*y**2) + 
     -           x**2*
     -            (106 - 41*y + 10*y**2 - 35*y**3)
     -             + x**5*
     -            (-110 + 85*y - 8*y**2 + 37*y**3)
     -             - x**4*
     -            (129 + 87*y + 203*y**2 + 
     -              105*y**3 + 36*y**4) + 
     -           x**3*
     -            (105 + 111*y + 193*y**2 + 
     -              111*y**3 + 36*y**4)))/
     -       ((-1 + x)*x*(1 + x)**2) + 
     -      (12*Li2mx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (2*(1 + y) + 2*x**10*(1 + y) - 
     -           x*(18 + 43*y + 17*y**2) - 
     -           x**9*(18 + 43*y + 17*y**2) + 
     -           x**2*
     -            (29 + 94*y + 111*y**2 + 30*y**3)
     -             + x**8*
     -            (29 + 94*y + 111*y**2 + 30*y**3)
     -             - x**3*
     -            (29 - 8*y + 84*y**2 + 
     -              136*y**3 + 15*y**4) - 
     -           x**7*
     -            (29 - 8*y + 84*y**2 + 
     -              136*y**3 + 15*y**4) + 
     -           2*x**5*
     -            (-93 + 51*y - 19*y**2 - 
     -              136*y**3 + 19*y**4) + 
     -           x**4*
     -            (-107 + 176*y + 153*y**2 - 
     -              46*y**3 + 68*y**4) + 
     -           x**6*
     -            (-107 + 176*y + 153*y**2 - 
     -              46*y**3 + 68*y**4)))/
     -       ((-1 + x)**3*x*(1 + x)) - 
     -      (3*logx**2*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (-16 + 14*x**11 + 
     -           x**10*(103 - 2*y) + 
     -           x*(-51 + 30*y) + 
     -           x**9*(46 - 59*y - 62*y**2) + 
     -           x**2*(-64 - 79*y + 6*y**2) - 
     -           x**3*
     -            (-165 + 191*y + 50*y**2 + 
     -              92*y**3) + 
     -           x**8*
     -            (-163 - y + 236*y**2 + 122*y**3)
     -             + x**4*
     -            (351 + 61*y + 724*y**2 + 
     -              342*y**3 + 72*y**4) - 
     -           x**7*
     -            (83 + 681*y + 290*y**2 + 
     -              448*y**3 + 72*y**4) + 
     -           x**6*
     -            (509 + 165*y + 1482*y**2 + 
     -              544*y**3 + 216*y**4) - 
     -           x**5*
     -            (-53 + 1259*y + 606*y**2 + 
     -              756*y**3 + 216*y**4)))/
     -       ((-1 + x)**3*x*(1 + x)**2) - 
     -      (12*log1px*logx*(1 + y)*
     -         (1 + x + x**2 - x*y)*
     -         (-3*(1 + y) + 6*x**9*(1 + y) - 
     -           2*x**8*(5 + 20*y + 17*y**2) + 
     -           x*(26 + 59*y + 29*y**2) + 
     -           x**2*
     -            (53 + 108*y - 26*y**2 - 61*y**3)
     -             + x**7*
     -            (-28 - 72*y + y**2 + 65*y**3) + 
     -           x**3*
     -            (11 + 130*y + 73*y**2 + 
     -              69*y**3 + 71*y**4) - 
     -           x**6*
     -            (-2 + 86*y + 116*y**2 + 
     -              57*y**3 + 73*y**4) + 
     -           x**5*
     -            (49 + 137*y + 201*y**2 + 
     -              242*y**3 + 105*y**4 + 36*y**5)
     -             - x**4*
     -            (50 + 79*y + 240*y**2 + 
     -              226*y**3 + 111*y**4 + 36*y**5)
     -           ))/((-1 + x)*x*(1 + x)**2) - 
     -      (12*log1pxpx2mxy*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (6 + 23*y + x**10*(6 + 23*y) + 
     -           x*(15 + 35*y - 98*y**2) + 
     -           x**9*(15 + 35*y - 98*y**2) + 
     -           x**2*
     -            (71 + 161*y - 148*y**2 + 
     -              174*y**3) + 
     -           x**8*
     -            (71 + 161*y - 148*y**2 + 
     -              174*y**3) + 
     -           x**3*
     -            (105 + 135*y - 547*y**2 + 
     -              189*y**3 - 164*y**4) + 
     -           x**7*
     -            (105 + 135*y - 547*y**2 + 
     -              189*y**3 - 164*y**4) + 
     -           x**4*
     -            (175 + 275*y - 552*y**2 + 
     -              636*y**3 - 104*y**4 + 83*y**5)
     -             + x**6*
     -            (175 + 275*y - 552*y**2 + 
     -              636*y**3 - 104*y**4 + 83*y**5)
     -             + x**5*
     -            (192 + 218*y - 848*y**2 + 
     -              450*y**3 - 348*y**4 + 
     -              22*y**5 - 18*y**6)))/
     -       ((1 + x)**2*(1 + x**2 - x*y)**2) - 
     -      (12*log1py*(1 + y)*
     -         (1 + x + x**2 - x*y)**2*
     -         (y*(2 + 15*y + 12*y**2) + 
     -           x**6*y*(2 + 15*y + 12*y**2) + 
     -           x*(2 + 5*y + 67*y**2 + 7*y**3 - 
     -              19*y**4) + 
     -           x**5*
     -            (2 + 5*y + 67*y**2 + 7*y**3 - 
     -              19*y**4) + 
     -           x**2*
     -            (10 - y + 153*y**2 + 2*y**3 + 
     -              6*y**4 + 25*y**5) + 
     -           x**4*
     -            (10 - y + 153*y**2 + 2*y**3 + 
     -              6*y**4 + 25*y**5) - 
     -           2*x**3*
     -            (-8 + 4*y - 92*y**2 + 29*y**3 + 
     -              29*y**4 + 11*y**5 + 9*y**6)))/
     -       (x*(1 + x)**2*y**2) + 
     -      (12*logx*(1 + y)**2*
     -         (1 + x + x**2 - x*y)*
     -         (8 + 10*x**14 + 
     -           x**13*(46 - 25*y) - 
     -           19*x*(-2 + y) + 
     -           x**2*(83 - 155*y - 2*y**2) + 
     -           x**12*(103 - 173*y + 4*y**2) + 
     -           x**11*
     -            (207 - 268*y + 338*y**2 + 
     -              56*y**3) + 
     -           x**3*
     -            (175 - 224*y + 334*y**2 + 
     -              58*y**3) + 
     -           x**4*
     -            (136 - 676*y + 269*y**2 - 
     -              465*y**3 - 92*y**4) + 
     -           x**10*
     -            (180 - 726*y + 293*y**2 - 
     -              447*y**3 - 92*y**4) + 
     -           x**9*
     -            (236 - 540*y + 1330*y**2 - 
     -              142*y**3 + 378*y**4 + 65*y**5)
     -             + x**5*
     -            (196 - 478*y + 1330*y**2 - 
     -              146*y**3 + 394*y**4 + 65*y**5)
     -             + 2*x**7*
     -            (55 - 303*y + 908*y**2 - 
     -              237*y**3 + 406*y**4 + 
     -              43*y**5 + 18*y**6) - 
     -           x**8*
     -            (-113 + 951*y - 823*y**2 + 
     -              1441*y**3 + 54*y**4 + 
     -              178*y**5 + 18*y**6) - 
     -           x**6*
     -            (-87 + 919*y - 809*y**2 + 
     -              1463*y**3 + 50*y**4 + 
     -              182*y**5 + 18*y**6)))/
     -       (x*(-1 + x**4 + x*y - x**3*y)**2) + 
     -      (x*(-24 - 3*(200 + 7*Pi**2)*y - 
     -            2*(-72 + 71*Pi**2)*y**2 + 
     -            (1524 - 89*Pi**2)*y**3 + 
     -            6*(134 + 3*Pi**2)*y**4) + 
     -         x**13*
     -          (24 + (600 + 9*Pi**2)*y + 
     -            2*(-72 + 25*Pi**2)*y**2 - 
     -            (1524 + 83*Pi**2)*y**3 - 
     -            2*(402 + 55*Pi**2)*y**4) - 
     -         x**2*(72 - 12*(-122 + 9*Pi**2)*y + 
     -            (636 - 89*Pi**2)*y**2 + 
     -            (804 - 416*Pi**2)*y**3 + 
     -            (3048 - 397*Pi**2)*y**4 + 
     -            1488*y**5) + 
     -         x**12*
     -          (72 + (1464 - 58*Pi**2)*y + 
     -            (636 + 199*Pi**2)*y**2 + 
     -            12*(67 + 11*Pi**2)*y**3 + 
     -            (3048 + 155*Pi**2)*y**4 + 
     -            2*(744 + 121*Pi**2)*y**5) + 
     -         x**3*(-24 + (-492 + 89*Pi**2)*y + 
     -            (2088 - 86*Pi**2)*y**2 - 
     -            6*(-524 + 23*Pi**2)*y**3 + 
     -            (3048 - 538*Pi**2)*y**4 + 
     -            (4020 - 563*Pi**2)*y**5 - 
     -            4*(-390 + 7*Pi**2)*y**6) - 
     -         x**11*
     -          (-24 + (-492 + 157*Pi**2)*y + 
     -            24*(87 + Pi**2)*y**2 + 
     -            (3144 + 542*Pi**2)*y**3 + 
     -            (3048 + 838*Pi**2)*y**4 + 
     -            (4020 + 489*Pi**2)*y**5 + 
     -            26*(60 + 11*Pi**2)*y**6) + 
     -         2*Pi**2*x**7*y*
     -          (-342 + 136*y - 92*y**2 - 
     -            1545*y**3 - 810*y**4 - 
     -            196*y**5 - 352*y**6 + 9*y**7) + 
     -         x**4*(48 - 4*(-375 + 41*Pi**2)*y + 
     -            264*(1 + Pi**2)*y**2 + 
     -            4*(-849 + 91*Pi**2)*y**3 - 
     -            3*(1336 + 9*Pi**2)*y**4 + 
     -            12*(-363 + 34*Pi**2)*y**5 + 
     -            (-3468 + 421*Pi**2)*y**6 + 
     -            24*(-38 + Pi**2)*y**7) + 
     -         x**10*
     -          (-48 - 4*(375 + Pi**2)*y + 
     -            12*(-22 + 45*Pi**2)*y**2 + 
     -            4*(849 + 334*Pi**2)*y**3 + 
     -            (4008 + 1331*Pi**2)*y**4 + 
     -            12*(363 + 95*Pi**2)*y**5 + 
     -            (3468 + 751*Pi**2)*y**6 + 
     -            16*(57 + 11*Pi**2)*y**7) + 
     -         x**5*(168 + (3528 - 525*Pi**2)*y + 
     -            (-924 + 678*Pi**2)*y**2 + 
     -            (-1692 + 7*Pi**2)*y**3 - 
     -            8*(-594 + 181*Pi**2)*y**4 - 
     -            96*(-38 + 3*Pi**2)*y**5 - 
     -            12*(-257 + 9*Pi**2)*y**6 - 
     -            8*(-228 + 25*Pi**2)*y**7 - 
     -            6*(-38 + Pi**2)*y**8) - 
     -         x**9*(168 + (3528 + 215*Pi**2)*y + 
     -            84*(-11 + 7*Pi**2)*y**2 + 
     -            3*(-564 + 233*Pi**2)*y**3 + 
     -            (4752 + 2666*Pi**2)*y**4 + 
     -            16*(228 + 149*Pi**2)*y**5 + 
     -            (3084 + 626*Pi**2)*y**6 + 
     -            24*(76 + 21*Pi**2)*y**7 + 
     -            4*(57 + 11*Pi**2)*y**8) + 
     -         x**8*(-120 - 
     -            4*(690 + 79*Pi**2)*y + 
     -            (2208 + 539*Pi**2)*y**2 + 
     -            8*(348 + 299*Pi**2)*y**3 + 
     -            2*(-372 + 613*Pi**2)*y**4 + 
     -            6*(478 + 313*Pi**2)*y**5 + 
     -            (2004 + 2041*Pi**2)*y**6 + 
     -            8*(114 + 13*Pi**2)*y**7 + 
     -            6*(76 + 21*Pi**2)*y**8) + 
     -         x**6*(120 + (2760 - 668*Pi**2)*y + 
     -            (-2208 + 1205*Pi**2)*y**2 + 
     -            2*(-1392 + 553*Pi**2)*y**3 + 
     -            (744 - 314*Pi**2)*y**4 + 
     -            4*(-717 + 347*Pi**2)*y**5 + 
     -            3*(-668 + 321*Pi**2)*y**6 - 
     -            48*(19 + Pi**2)*y**7 + 
     -            (-456 + 50*Pi**2)*y**8) - 
     -         2*y*(Pi**2*(3 + 8*y + 4*y**2) + 
     -            6*(17 + 33*y + 16*y**2)) + 
     -         2*x**14*y*
     -          (Pi**2*(10 + 22*y + 11*y**2) + 
     -            6*(17 + 33*y + 16*y**2)))/
     -       ((-1 + x)**3*x*(1 + x)*y*
     -         (1 + x**2 - x*y))))/
     -  (9d0*(1 + y)**3*(1 + x + x**2 - x*y)**3)
      ifinite=zero
      res(2)=dcmplx(doublepole,zero)
      res(1)=dcmplx(rsinglepole,isinglepole)
      res(0)=dcmplx(rfinite,ifinite)
      return
      end


